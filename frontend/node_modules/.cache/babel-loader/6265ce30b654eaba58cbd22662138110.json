{"ast":null,"code":"var _jsxFileName = \"/home/seva/Desktop/textilespot-master/frontend/src/component/FAQ.tsx\";\nimport React from 'react';\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from 'react-apollo';\nimport s from \"./FAQ/FAQ.module.css\";\nimport cn from \"classnames\";\nimport Preloader from \"./Preloader/preloader\";\nconst Query_Groups = gql`\n  query {\n    FAQGroups {\n        Title,\n        id\n    }\n}`;\nconst Query_Item = gql`\n  query {\n    items{\n    edges{\n    node{\n        Title\n        Group{\n        id\n        Title\n      }\n        Answer\n        Active\n        id\n    }}}\n}`;\nconst Update_Item = gql`\nmutation updateItem($Title: String $Group: ID $Active: Boolean $Answer: String){\n  updateItem(id: $id ,input:{\n    Title: $Title,\n    Group: $Group,\n    Answer: $Answer,\n    Active: $Active\n  }){\n    item{\n      Title\n      Group{\n        id\n        Title\n      }\n      Answer\n      Active\n      id\n    }\n  }\n}\n`;\nexport const FrequentlyAskedQuestions = () => {\n  let inputTitle, inputGroup, Answer, Active;\n  const {\n    data,\n    loading\n  } = useQuery(Query_Groups, {\n    pollInterval: 500 // refetch the result every 0.5 second\n\n  });\n\n  const SuitableItems = props => {\n    const {\n      data,\n      loading\n    } = useQuery(Query_Item, {\n      pollInterval: 500 // refetch the result every 0.5 second\n\n    });\n    if (loading) return /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    });\n    const suitableItems = data.items.edges.node ? data.items.edges.node.filter(i => Number(i.Group) === Number(props.Id)) : [];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: props.Id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, suitableItems.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: [s.item, \"d-flex justify-content-between d-flex align-items-center\"].join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 116\n      }\n    }, item.Title), /*#__PURE__*/React.createElement(\"div\", {\n      className: cn({\n        [s.active]: item.Active\n      }, s.menu_toogle),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: cn({\n        [s.active]: item.Active\n      }, s.group, s.dropdown),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, item.Answer))));\n  }; // const [createUser, {data}] = useMutation(Update_Item);\n\n\n  if (loading) return /*#__PURE__*/React.createElement(Preloader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"container text-center mt-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"FAQ\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"middle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"In a professional context it often happens that private or corporate\"), data.FAQGroups.map(group => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row border-bottom ml-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: s.group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 66\n    }\n  }, group.Title)), /*#__PURE__*/React.createElement(SuitableItems, {\n    Id: group.Group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }))));\n};","map":{"version":3,"sources":["/home/seva/Desktop/textilespot-master/frontend/src/component/FAQ.tsx"],"names":["React","gql","useQuery","s","cn","Preloader","Query_Groups","Query_Item","Update_Item","FrequentlyAskedQuestions","inputTitle","inputGroup","Answer","Active","data","loading","pollInterval","SuitableItems","props","suitableItems","items","edges","node","filter","i","Number","Group","Id","map","item","join","Title","active","menu_toogle","group","dropdown","main","FAQGroups"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {gql} from \"apollo-boost\";\nimport {useQuery, useMutation} from 'react-apollo';\nimport s from \"./FAQ/FAQ.module.css\";\nimport cn from \"classnames\";\nimport Preloader from \"./Preloader/preloader\";\n\nconst Query_Groups = gql`\n  query {\n    FAQGroups {\n        Title,\n        id\n    }\n}`;\n\nconst Query_Item = gql`\n  query {\n    items{\n    edges{\n    node{\n        Title\n        Group{\n        id\n        Title\n      }\n        Answer\n        Active\n        id\n    }}}\n}`;\n\nconst Update_Item = gql`\nmutation updateItem($Title: String $Group: ID $Active: Boolean $Answer: String){\n  updateItem(id: $id ,input:{\n    Title: $Title,\n    Group: $Group,\n    Answer: $Answer,\n    Active: $Active\n  }){\n    item{\n      Title\n      Group{\n        id\n        Title\n      }\n      Answer\n      Active\n      id\n    }\n  }\n}\n`;\n\nexport const FrequentlyAskedQuestions = () => {\n\n    let inputTitle, inputGroup, Answer, Active;\n\n    const {data, loading}: any = useQuery(\n        Query_Groups, {\n            pollInterval: 500 // refetch the result every 0.5 second\n        }\n    );\n\n    const SuitableItems = (props: any) => {\n        const {data, loading}: any = useQuery(\n            Query_Item, {\n                pollInterval: 500 // refetch the result every 0.5 second\n            }\n        );\n\n        if (loading) return <Preloader/>;\n       const suitableItems = data.items.edges.node ? data.items.edges.node.filter((i: any) => Number(i.Group) === Number(props.Id)) : []\n        return (\n            <div key={props.Id}>\n                {suitableItems.map((item: any) => <div>\n                    <h6 className={[s.item, \"d-flex justify-content-between d-flex align-items-center\"].join(' ')}><span\n                        className=\"text-danger\">{item.Title}</span>\n                        <div\n                            className={cn({[s.active]: item.Active}, s.menu_toogle)}>\n                        </div>\n                    </h6>\n                    <p className={cn({[s.active]: item.Active}, s.group, s.dropdown)}>{item.Answer}</p>\n                </div>)}\n            </div>\n        )\n    }\n    // const [createUser, {data}] = useMutation(Update_Item);\n    if (loading) return <Preloader/>;\n    return (\n        <div className={s.main}>\n            <h3 className=\"container text-center mt-3 mb-3\">FAQ</h3>\n            <p className=\"middle text-center\">In a professional context it often happens that private or\n                corporate</p>\n            {data.FAQGroups.map((group: any) =>\n                <div>\n                    <div className=\"row border-bottom ml-3 mb-3\"><h5 className={s.group}>{group.Title}</h5></div>\n                    <SuitableItems Id={group.Group}/>\n                </div>)}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}