{"ast":null,"code":"import { faqAPI } from \"../../api\";\nconst ACTIVE_ID = \"ACTIVE_ID\";\nconst GET_FAQ_GROUPS = \"GET-FAQ-GROUPS\";\nconst GET_FAQ_ITEM = \"GET-FAQ-ITEM\";\nconst MAKE_ITEM_ACTIVE = \"MAKE-ITEM-ACTIVE\";\nlet initialState = {\n  groups: [],\n  items: [],\n  active_id: 0\n};\nexport const FAQReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_FAQ_GROUPS:\n      return { ...state,\n        groups: action.payload\n      };\n\n    case ACTIVE_ID:\n      return { ...state,\n        active_id: action.payload\n      };\n\n    case MAKE_ITEM_ACTIVE:\n      return { ...state,\n        ...(state.items[state.active_id].active === true)\n      };\n\n    case GET_FAQ_ITEM:\n      return { ...state,\n        items: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst getFaqGroupsSuccess = payload => ({\n  type: GET_FAQ_GROUPS,\n  payload\n});\n\nconst getFaqItemsSuccess = payload => ({\n  type: GET_FAQ_ITEM,\n  payload\n});\n\nconst activeIdSuccess = id => ({\n  type: ACTIVE_ID,\n  payload: id\n});\n\nconst makeItemActiveSuccess = () => ({\n  type: MAKE_ITEM_ACTIVE\n});\n\nexport const getFaqGroups = () => async dispatch => {\n  let response = await faqAPI.getFaq_Group();\n  dispatch(getFaqGroupsSuccess(response.data));\n};\nexport const ActiveId = id => async dispatch => {\n  debugger;\n  dispatch(activeIdSuccess(id));\n  dispatch(makeItemActiveSuccess());\n  await faqAPI.active_Item(state.items, id);\n};\nexport const getFaqItems = () => async dispatch => {\n  let response = await faqAPI.getFaq_Item();\n  dispatch(getFaqItemsSuccess(response.data));\n};","map":{"version":3,"sources":["/home/vsevolod/Desktop/TextileSpot. REACT/textilespot./src/redux/reducers/FAQReducer.jsx"],"names":["faqAPI","ACTIVE_ID","GET_FAQ_GROUPS","GET_FAQ_ITEM","MAKE_ITEM_ACTIVE","initialState","groups","items","active_id","FAQReducer","state","action","type","payload","active","getFaqGroupsSuccess","getFaqItemsSuccess","activeIdSuccess","id","makeItemActiveSuccess","getFaqGroups","dispatch","response","getFaq_Group","data","ActiveId","active_Item","getFaqItems","getFaq_Item"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,WAArB;AAEA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAEA,IAAIC,YAAY,GAAE;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,SAAS,EAAG;AAHK,CAAlB;AAMA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAK,GAACL,YAAP,EAAqBM,MAArB,KAA+B;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,cAAL;AACI,aAAO,EAAC,GAAGQ,KAAJ;AAAWJ,QAAAA,MAAM,EAAEK,MAAM,CAACE;AAA1B,OAAP;;AACJ,SAAKZ,SAAL;AACI,aAAO,EAAC,GAAGS,KAAJ;AAAWF,QAAAA,SAAS,EAAEG,MAAM,CAACE;AAA7B,OAAP;;AACJ,SAAKT,gBAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAW,YAAGA,KAAK,CAACH,KAAN,CAAYG,KAAK,CAACF,SAAlB,EAA6BM,MAA7B,KAAwC,IAA3C;AAAX,OAAP;;AACJ,SAAKX,YAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAWH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAAzB,OAAP;;AACJ;AACK,aAAOH,KAAP;AAVT;AAYH,CAbM;;AAeP,MAAMK,mBAAmB,GAAIF,OAAD,KAAc;AAACD,EAAAA,IAAI,EAAEV,cAAP;AAAuBW,EAAAA;AAAvB,CAAd,CAA5B;;AACA,MAAMG,kBAAkB,GAAIH,OAAD,KAAc;AAACD,EAAAA,IAAI,EAAET,YAAP;AAAqBU,EAAAA;AAArB,CAAd,CAA3B;;AACA,MAAMI,eAAe,GAAIC,EAAD,KAAS;AAACN,EAAAA,IAAI,EAAEX,SAAP;AAAkBY,EAAAA,OAAO,EAACK;AAA1B,CAAT,CAAxB;;AACA,MAAMC,qBAAqB,GAAG,OAAO;AAACP,EAAAA,IAAI,EAAER;AAAP,CAAP,CAA9B;;AAEA,OAAO,MAAMgB,YAAY,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAChD,MAAIC,QAAQ,GAAG,MAAMtB,MAAM,CAACuB,YAAP,EAArB;AACAF,EAAAA,QAAQ,CAACN,mBAAmB,CAACO,QAAQ,CAACE,IAAV,CAApB,CAAR;AACC,CAHE;AAIP,OAAO,MAAMC,QAAQ,GAAIP,EAAD,IAAQ,MAAMG,QAAN,IAAkB;AAC9C;AACAA,EAAAA,QAAQ,CAACJ,eAAe,CAACC,EAAD,CAAhB,CAAR;AACAG,EAAAA,QAAQ,CAACF,qBAAqB,EAAtB,CAAR;AACA,QAAMnB,MAAM,CAAC0B,WAAP,CAAmBhB,KAAK,CAACH,KAAzB,EAAgCW,EAAhC,CAAN;AAGH,CAPM;AAQP,OAAO,MAAMS,WAAW,GAAG,MAAM,MAAMN,QAAN,IAAkB;AAChD,MAAIC,QAAQ,GAAI,MAAMtB,MAAM,CAAC4B,WAAP,EAAtB;AACCP,EAAAA,QAAQ,CAACL,kBAAkB,CAACM,QAAQ,CAACE,IAAV,CAAnB,CAAR;AACH,CAHM","sourcesContent":["import {faqAPI} from \"../../api\"\n\nconst ACTIVE_ID = \"ACTIVE_ID\"\nconst GET_FAQ_GROUPS = \"GET-FAQ-GROUPS\"\nconst GET_FAQ_ITEM = \"GET-FAQ-ITEM\"\nconst MAKE_ITEM_ACTIVE = \"MAKE-ITEM-ACTIVE\"\n\nlet initialState ={\n groups :[],\n items :[],\n active_id : 0\n}\n\nexport const FAQReducer = (state=initialState, action) =>{\n    switch (action.type) {\n        case GET_FAQ_GROUPS:\n            return {...state, groups: action.payload}\n        case ACTIVE_ID:\n            return {...state, active_id: action.payload}\n        case MAKE_ITEM_ACTIVE:\n            return {...state, ...state.items[state.active_id].active === true}\n        case GET_FAQ_ITEM:\n            return {...state, items: action.payload}\n        default:\n             return state\n    }\n}\n\nconst getFaqGroupsSuccess = (payload) => ({type: GET_FAQ_GROUPS, payload})\nconst getFaqItemsSuccess = (payload) => ({type: GET_FAQ_ITEM, payload})\nconst activeIdSuccess = (id) => ({type: ACTIVE_ID, payload:id})\nconst makeItemActiveSuccess = () => ({type: MAKE_ITEM_ACTIVE})\n\nexport const getFaqGroups = () => async dispatch => {\n    let response = await faqAPI.getFaq_Group()\n    dispatch(getFaqGroupsSuccess(response.data))\n    }\nexport const ActiveId = (id) => async dispatch => {\n    debugger\n    dispatch(activeIdSuccess(id))\n    dispatch(makeItemActiveSuccess())\n    await faqAPI.active_Item(state.items, id)\n\n\n}\nexport const getFaqItems = () => async dispatch => {\n   let response =  await faqAPI.getFaq_Item() \n    dispatch(getFaqItemsSuccess(response.data))\n}"]},"metadata":{},"sourceType":"module"}