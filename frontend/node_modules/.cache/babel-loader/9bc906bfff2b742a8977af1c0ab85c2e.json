{"ast":null,"code":"import axios from 'axios';\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nconst config2 = {\n  headers: {\n    'Content-Type': 'multipart/form-data'\n  }\n};\nconst instance = axios.create({\n  baseURL: 'http://127.0.0.1:8000/'\n});\nexport const faqAPI = {\n  getFaq_Group: () => {\n    return instance.get('api/faq_group/');\n  },\n  getFaq_Item: () => {\n    return instance.get('api/faq_item');\n  },\n  active_Item: item => {\n    return instance.put(`api/faq_item/${item.id}/`, {\n      Group: item.Group,\n      Title: item.Title,\n      Answer: item.Answer,\n      Active: item.Active\n    });\n  }\n};\nexport const authAPI = {\n  getUser: tokenConfig => {\n    return instance.get('auth/users/me/', tokenConfig);\n  },\n  login: body => {\n    return instance.post('auth/token/login', body, config);\n  },\n  logout: tokenConfig => {\n    return instance.post('auth/token/logout', \"\", tokenConfig);\n  },\n  register: body => {\n    return instance.post('auth/users/', body, config);\n  },\n  forgot_password: body => {\n    return instance.post('auth/users/reset_password/', body);\n  },\n  reset_password: body => {\n    return instance.post('auth/users/reset_password_confirm/', body);\n  },\n  activate: body => {\n    debugger;\n    return instance.post('auth/users/activation/', {\n      uid: body.uid,\n      token: body.token\n    });\n  }\n};\nexport const contentAPI = {\n  content: () => {\n    return instance.get('api/ContentPage/');\n  }\n};\nexport const contactAPI = {\n  PutContact: Target => {\n    return instance.post('api/Contact/', Target, config);\n  },\n  GetContact: () => {\n    return instance.get('api/Contact/', config);\n  }\n};\nexport const profileAPI = {\n  PostProfile: id => {\n    debugger;\n    let form_data = new FormData();\n    form_data.append('owner', String(id));\n    return instance.post('api/manufacturerProfilePage/', form_data, config2);\n  },\n  PutProfile: (form_data, id) => {\n    debugger;\n    return instance.patch(`api/manufacturerProfilePage/${id}/`, form_data, config2);\n  },\n  PatchDocuments: (form_data, id) => {\n    return instance.patch(`api/Document/${id + 1}/`, form_data, config2);\n  },\n  PostDocuments: id => {\n    let form_data = new FormData();\n    form_data.append('owner', String(id));\n    return instance.post(`api/Document/`, form_data, config2);\n  },\n  DeleteDocuments: id => {\n    return instance.delete(`api/Document/${id + 1}`);\n  },\n  getCountries: () => {\n    return axios.get('http://restcountries.eu/rest/v2/all');\n  },\n  getProfile: () => {\n    return instance.get('api/manufacturerProfilePage');\n  },\n  getDocuments: () => {\n    debugger;\n    return instance.get('api/Document/');\n  },\n  getCategory: () => {\n    return instance.get(\"api/Category/\");\n  },\n  getSearchedData: search => {\n    debugger;\n    return instance.get(`manufacturerProfilePage?search=${search}`);\n  },\n  postRequestForQuotations: request => {\n    return instance.post('api/RequestForQuotation/', request);\n  }\n};\nexport const findPageAPI = {\n  findPage: search => {\n    debugger;\n    return instance.get(`links?search=${search}`);\n  }\n};","map":{"version":3,"sources":["/home/seva/Desktop/textilespot-master/frontend/src/api.ts"],"names":["axios","config","headers","config2","instance","create","baseURL","faqAPI","getFaq_Group","get","getFaq_Item","active_Item","item","put","id","Group","Title","Answer","Active","authAPI","getUser","tokenConfig","login","body","post","logout","register","forgot_password","reset_password","activate","uid","token","contentAPI","content","contactAPI","PutContact","Target","GetContact","profileAPI","PostProfile","form_data","FormData","append","String","PutProfile","patch","PatchDocuments","PostDocuments","DeleteDocuments","delete","getCountries","getProfile","getDocuments","getCategory","getSearchedData","search","postRequestForQuotations","request","findPageAPI","findPage"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {SingleDocument, SingleProfile} from \"./redux/reducers/ProfileTypes\";\nimport {CategoriesType} from \"./component/accounts/Profile/ProfileEdit/ProfileEditContainer\";\n\nconst config = {\n    headers: {\n        'Content-Type': 'application/json',\n\n    }\n}\nconst config2 = {headers: {'Content-Type': 'multipart/form-data'}};\n\n\nconst instance = axios.create({\n    baseURL: 'http://127.0.0.1:8000/',\n});\ntype RequestForQuotation = {\n    id: number,\n    keywords: string,\n    category: string,\n    descriptions: string,\n    attachments: string,\n    preferredCurrency: string,\n    preferredUntilPrice: string,\n    preferredShippingAgreement: string,\n    destinationPort: string,\n    paymentMethod: string,\n    \n}\ntype FaqGroup = { Title: string; id: number; }[]\ntype FaqItem = { id: number, Title: string, Answer: string, Active: boolean, Group: string }[]\n\n\nexport const faqAPI = {\n    getFaq_Group: () => {\n        return instance.get<FaqGroup>('api/faq_group/')\n    },\n    getFaq_Item: () => {\n        return instance.get<FaqItem>('api/faq_item')\n    },\n    active_Item: (item: {\n        id: number,\n        Title: string,\n        Answer: string,\n        Active: boolean,\n        Group: string\n    }) => {\n        return instance.put<{\n        id: number,\n        Title: string,\n        Answer: string,\n        Active: boolean,\n        Group: string\n    }>(`api/faq_item/${item.id}/`, {\n            Group: item.Group,\n            Title: item.Title,\n            Answer: item.Answer,\n            Active: item.Active,\n        })\n    }\n}\nexport const authAPI = {\n    getUser: (tokenConfig: any) => {\n\n        return instance.get<{\n            first_name: string,\n            id: null,\n            email: string\n        }>('auth/users/me/', tokenConfig)\n    },\n    login: (body: any) => {\n\n        return instance.post('auth/token/login', body, config)\n    },\n    logout: (tokenConfig: any) => {\n\n        return instance.post('auth/token/logout', \"\", tokenConfig)\n    },\n    register: (body: any) => {\n\n        return instance.post('auth/users/', body, config)\n    },\n    forgot_password: (body: any) => {\n\n        return instance.post('auth/users/reset_password/', body)\n    },\n    reset_password: (body: any) => {\n\n        return instance.post('auth/users/reset_password_confirm/', body)\n    },\n    activate: (body: any) => {\n        debugger\n        return instance.post('auth/users/activation/', {\n            uid: body.uid,\n            token: body.token\n        })\n    },\n}\n\nexport const contentAPI = {\n    content: () => {\n        return instance.get<{id: number,\n            Title:string,\n            BrowserTitle: string,\n            MetaDescription: string,\n            UrlSlug: string,\n            Content: string\n        }>('api/ContentPage/')\n    }\n}\n\nexport const contactAPI = {\n    PutContact: (Target: {\n        name: string,\n        companyName: string,\n        emailAddress: string,\n        phoneNumber: string,\n        subject: string,\n        message: string,\n        owner: number\n    }) => {\n        return instance.post<{\n        name: string,\n        companyName: string,\n        emailAddress: string,\n        phoneNumber: string,\n        subject: string,\n        message: string,\n        owner: number\n    }>('api/Contact/', Target, config)\n    },\n    GetContact: () => {\n        return instance.get('api/Contact/', config)\n    }\n}\n\nexport const profileAPI = {\n\n    PostProfile: (id: number) => {\n        debugger\n        let form_data = new FormData();\n        form_data.append('owner', String(id));\n        return instance.post<SingleProfile>('api/manufacturerProfilePage/', form_data, config2)\n    },\n\n    PutProfile: (form_data: {\n        companyDescription: string,\n        companyLogo: string,\n        companyName: string,\n        companyProfilePicture: string,\n        country: string,\n        id: number,\n        owner: number,\n        sections: string\n    }, id: number) => {\n        debugger\n        return instance.patch<SingleProfile>(`api/manufacturerProfilePage/${id}/`, form_data, config2)\n    },\n    PatchDocuments: (form_data: {Download: string,\n    Thumbnail: string,\n    Title: string,\n    id: number,\n    owner: number}, id: number) => {\n        return instance.patch<SingleDocument>(`api/Document/${id + 1}/`, form_data, config2)\n    },\n    PostDocuments: (id: any) => {\n        let form_data = new FormData();\n        form_data.append('owner', String(id));\n        return instance.post<SingleDocument>(`api/Document/`, form_data, config2)\n    },\n    DeleteDocuments: (id: number) => {\n        return instance.delete(`api/Document/${id + 1}`)\n    },\n    getCountries: () => {\n        return axios.get('http://restcountries.eu/rest/v2/all')\n    },\n    getProfile: () => {\n        return instance.get<Array<SingleProfile>>('api/manufacturerProfilePage')\n    },\n    getDocuments: () => {\n        debugger\n        return instance.get<Array<SingleDocument>>('api/Document/')\n    },\n    getCategory: () => {\n        return instance.get<CategoriesType>(\"api/Category/\")\n    },\n    getSearchedData: (search: string) => {\n        debugger\n        return instance.get<Array<SingleProfile>>(`manufacturerProfilePage?search=${search}`)\n    },\n    postRequestForQuotations: (request: any) => {\n        return instance.post<>('api/RequestForQuotation/', request)\n    }\n}\n\n\nexport const findPageAPI = {\n    findPage: (search: string) => {\n        debugger\n        return instance.get(`links?search=${search}`)\n    }\n}"]},"metadata":{},"sourceType":"module"}