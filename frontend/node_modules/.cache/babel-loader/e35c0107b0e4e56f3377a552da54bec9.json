{"ast":null,"code":"import axios from \"axios\";\nimport { returnErrors } from \"./ErrorsReducer\"; //import {authAPI} from \"../../api\"\n\nconst USER_LOADING = 'USER_LOADING';\nconst USER_LOADED = 'USER_LOADED';\nconst AUTH_ERROR = 'AUTH_ERROR';\nlet initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\nexport const LoginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\nexport const login = (username, password) => dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    username,\n    password\n  });\n  axios.post('/api/auth/login', config).then(response => {\n    dispatch({\n      type: USER_LOADED,\n      payload: response.data\n    });\n  }).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status));\n    dispatch({\n      type: AUTH_ERROR\n    });\n  });\n};","map":{"version":3,"sources":["/home/vsevolod/Desktop/TextileSpot. REACT/textilespot./src/redux/reducers/AuthReducer.jsx"],"names":["axios","returnErrors","USER_LOADING","USER_LOADED","AUTH_ERROR","initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","LoginReducer","state","action","type","login","username","password","dispatch","config","headers","body","JSON","stringify","post","then","response","payload","data","catch","err","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,iBAA7B,C,CAEA;;AACA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,UAAU,GAAG,YAAnB;AAKA,IAAIC,YAAY,GAAE;AACdC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADO;AAEdC,EAAAA,eAAe,EAAE,IAFH;AAGdC,EAAAA,SAAS,EAAE,KAHG;AAIdC,EAAAA,IAAI,EAAE;AAJQ,CAAlB;AAOA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAACR,YAAP,EAAqBS,MAArB,KAA+B;AACvD,UAAQA,MAAM,CAACC,IAAf;AAEI;AACK,aAAOF,KAAP;AAHT;AAKH,CANM;AAQP,OAAO,MAAMG,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAyBC,QAAD,IAAc;AAGvD,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACP,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAf,CAAb;AACAlB,EAAAA,KAAK,CAACyB,IAAN,CAAW,iBAAX,EAA8BL,MAA9B,EACCM,IADD,CACMC,QAAQ,IAAI;AACdR,IAAAA,QAAQ,CAAC;AACLJ,MAAAA,IAAI,EAAEZ,WADD;AAELyB,MAAAA,OAAO,EAAED,QAAQ,CAACE;AAFb,KAAD,CAAR;AAIH,GAND,EAMGC,KANH,CAMSC,GAAG,IAAI;AACZZ,IAAAA,QAAQ,CAAClB,YAAY,CAAC8B,GAAG,CAACJ,QAAJ,CAAaE,IAAd,EAAoBE,GAAG,CAACJ,QAAJ,CAAaK,MAAjC,CAAb,CAAR;AACAb,IAAAA,QAAQ,CAAC;AACLJ,MAAAA,IAAI,EAAEX;AADD,KAAD,CAAR;AAGH,GAXD;AAYH,CArBM","sourcesContent":["import axios from \"axios\"\nimport { returnErrors } from \"./ErrorsReducer\"\n\n//import {authAPI} from \"../../api\"\nconst USER_LOADING = 'USER_LOADING'\nconst USER_LOADED = 'USER_LOADED'\nconst AUTH_ERROR = 'AUTH_ERROR'\n\n\n\n\nlet initialState ={\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null\n}\n\nexport const LoginReducer = (state=initialState, action) =>{\n    switch (action.type) {\n\n        default:\n             return state\n    }\n}\n\nexport const login = (username, password) => (dispatch) => {\n    \n\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    const body = JSON.stringify({username, password})\n    axios.post('/api/auth/login', config)\n    .then(response => {\n        dispatch({\n            type: USER_LOADED,\n            payload: response.data\n        });\n    }).catch(err => {\n        dispatch(returnErrors(err.response.data, err.response.status));\n        dispatch({\n            type: AUTH_ERROR\n        })\n    })\n}"]},"metadata":{},"sourceType":"module"}