{"ast":null,"code":"var _jsxFileName = \"/home/seva/Desktop/textilespot-master/frontend/src/component/layout/Alerts.js\";\nimport React, { PureComponent, Fragment } from 'react';\nimport { withAlert } from 'react-alert';\nimport { connect } from 'react-redux';\n\nclass Alerts extends PureComponent {\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      message\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      if (error.msg.email) this.props.alert.error(`Email: ${error.msg.email.join()}`);\n      if (error.msg.password) this.props.alert.error(`Password: ${error.msg.password.join()}`);\n      if (error.msg.non_field_errors) this.props.alert.error(`${error.msg.non_field_errors.join()}`);\n\n      if (error.msg.first_name) {\n        this.props.alert.error(`First name ${error.msg.first_name.join()}`);\n      }\n\n      if (error.msg.last_name) {\n        this.props.alert.error(`Last name ${error.msg.last_name.join()}`);\n      }\n\n      if (error.msg.password1) {\n        this.props.alert.error(`Password ${error.msg.password1.join()}`);\n      }\n    }\n\n    if (message !== prevProps.message) {\n      if (message.log_in_ed) {\n        this.props.alert.success(`${message.log_in_ed}`);\n      }\n\n      if (message.registered) {\n        this.props.alert.success(`${message.registered}`);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error,\n    message: state.message\n  };\n};\n\nexport default connect(mapStateToProps)(withAlert()(Alerts));","map":{"version":3,"sources":["/home/seva/Desktop/textilespot-master/frontend/src/component/layout/Alerts.js"],"names":["React","PureComponent","Fragment","withAlert","connect","Alerts","componentDidUpdate","prevProps","error","message","props","msg","email","alert","join","password","non_field_errors","first_name","last_name","password1","log_in_ed","success","registered","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AACA,MAAMC,MAAN,SAAqBJ,aAArB,CAAmC;AAE/BK,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AACzB,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAmB,KAAKC,KAA9B;;AACA,QAAIF,KAAK,KAAKD,SAAS,CAACC,KAAxB,EAA8B;AAC1B,UAAIA,KAAK,CAACG,GAAN,CAAUC,KAAd,EACI,KAAKF,KAAL,CAAWG,KAAX,CAAiBL,KAAjB,CAAwB,UAASA,KAAK,CAACG,GAAN,CAAUC,KAAV,CAAgBE,IAAhB,EAAuB,EAAxD;AACJ,UAAIN,KAAK,CAACG,GAAN,CAAUI,QAAd,EACI,KAAKL,KAAL,CAAWG,KAAX,CAAiBL,KAAjB,CAAwB,aAAYA,KAAK,CAACG,GAAN,CAAUI,QAAV,CAAmBD,IAAnB,EAA0B,EAA9D;AACJ,UAAIN,KAAK,CAACG,GAAN,CAAUK,gBAAd,EACI,KAAKN,KAAL,CAAWG,KAAX,CAAiBL,KAAjB,CAAwB,GAAEA,KAAK,CAACG,GAAN,CAAUK,gBAAV,CAA2BF,IAA3B,EAAkC,EAA5D;;AACJ,UAAIN,KAAK,CAACG,GAAN,CAAUM,UAAd,EACI;AAAC,aAAKP,KAAL,CAAWG,KAAX,CAAiBL,KAAjB,CAAwB,cAAaA,KAAK,CAACG,GAAN,CAAUM,UAAV,CAAqBH,IAArB,EAA4B,EAAjE;AAAoE;;AACzE,UAAIN,KAAK,CAACG,GAAN,CAAUO,SAAd,EACI;AAAC,aAAKR,KAAL,CAAWG,KAAX,CAAiBL,KAAjB,CAAwB,aAAYA,KAAK,CAACG,GAAN,CAAUO,SAAV,CAAoBJ,IAApB,EAA2B,EAA/D;AAAkE;;AACvE,UAAIN,KAAK,CAACG,GAAN,CAAUQ,SAAd,EACI;AAAC,aAAKT,KAAL,CAAWG,KAAX,CAAiBL,KAAjB,CAAwB,YAAWA,KAAK,CAACG,GAAN,CAAUQ,SAAV,CAAoBL,IAApB,EAA2B,EAA9D;AAAiE;AAAC;;AAC3E,QAAIL,OAAO,KAAKF,SAAS,CAACE,OAA1B,EAAkC;AAC9B,UAAIA,OAAO,CAACW,SAAZ,EACI;AAAC,aAAKV,KAAL,CAAWG,KAAX,CAAiBQ,OAAjB,CAA0B,GAAEZ,OAAO,CAACW,SAAU,EAA9C;AAAiD;;AACtD,UAAIX,OAAO,CAACa,UAAZ,EACI;AAAC,aAAKZ,KAAL,CAAWG,KAAX,CAAiBQ,OAAjB,CAA0B,GAAEZ,OAAO,CAACa,UAAW,EAA/C;AAAkD;AAC1D;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL,wBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAGH;;AA5B8B;;AA+BnC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAM;AAENjB,IAAAA,KAAK,EAAEiB,KAAK,CAACjB,KAFP;AAGNC,IAAAA,OAAO,EAAEgB,KAAK,CAAChB;AAHT,GAAN;AAIF,CALF;;AAOA,eAAeL,OAAO,CAACoB,eAAD,CAAP,CAAyBrB,SAAS,GAAGE,MAAH,CAAlC,CAAf","sourcesContent":["import React, { PureComponent , Fragment} from 'react';\nimport {withAlert} from 'react-alert';\nimport {connect} from 'react-redux'\nclass Alerts extends PureComponent {\n\n    componentDidUpdate(prevProps){\n        const {error, message} = this.props;\n        if (error !== prevProps.error){\n            if (error.msg.email)\n                this.props.alert.error(`Email: ${error.msg.email.join()}`)\n            if (error.msg.password)\n                this.props.alert.error(`Password: ${error.msg.password.join()}`)\n            if (error.msg.non_field_errors)\n                this.props.alert.error(`${error.msg.non_field_errors.join()}`)\n            if (error.msg.first_name)\n                {this.props.alert.error(`First name ${error.msg.first_name.join()}`)}\n            if (error.msg.last_name)\n                {this.props.alert.error(`Last name ${error.msg.last_name.join()}`)}\n            if (error.msg.password1)\n                {this.props.alert.error(`Password ${error.msg.password1.join()}`)}}\n        if (message !== prevProps.message){\n            if (message.log_in_ed)\n                {this.props.alert.success(`${message.log_in_ed}`)}\n            if (message.registered)\n                {this.props.alert.success(`${message.registered}`)}\n        }\n    }\n    render() {\n        return <Fragment>\n\n        </Fragment>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n\n    error: state.error,\n    message: state.message\n}}\n\nexport default connect(mapStateToProps)(withAlert()(Alerts))"]},"metadata":{},"sourceType":"module"}