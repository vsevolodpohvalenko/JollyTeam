{"ast":null,"code":"import { faqAPI } from \"../../api\";\nimport { ACTIVE_ITEM, GET_FAQ_GROUPS, GET_FAQ_ITEM } from \"./FAQTypes\";\nlet initialState = {\n  groups: [],\n  items: [],\n  active_item: null\n};\nexport const FAQReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_FAQ_GROUPS:\n      return { ...state,\n        groups: action.payload\n      };\n\n    case ACTIVE_ITEM:\n      return { ...state,\n        active_item: action.payload\n      };\n\n    case GET_FAQ_ITEM:\n      return { ...state,\n        items: action.payload\n      };\n    // case MAKE_ACTIVE:\n    //     return {...state, active_item: {...state.active_item, Active: !state.active_item.Active}}\n\n    default:\n      return state;\n  }\n};\n\nconst getFaqGroupsSuccess = payload => ({\n  type: GET_FAQ_GROUPS,\n  payload\n});\n\nconst getFaqItemsSuccess = payload => ({\n  type: GET_FAQ_ITEM,\n  payload\n}); // const activeIdSuccess = (item: {\n//         id: number,\n//         Title: string\n// }) => ({type: ACTIVE_ITEM, payload: item})\n\n\nexport const getFaqGroups = () => async dispatch => {\n  let response = await faqAPI.getFaq_Group();\n  dispatch(getFaqGroupsSuccess(response.data));\n};\nexport const ActiveId = item => async dispatch => {\n  debugger;\n  await faqAPI.active_Item(item);\n  faqAPI.getFaq_Item(); // dispatch(activeIdSuccess(item))\n  // dispatch({type: MAKE_ACTIVE})\n};\nexport const getFaqItems = () => async dispatch => {\n  let response = await faqAPI.getFaq_Item();\n  dispatch(getFaqItemsSuccess(response.data));\n};","map":{"version":3,"sources":["/home/seva/Desktop/textilespot-master/frontend/src/redux/reducers/FAQReducer.tsx"],"names":["faqAPI","ACTIVE_ITEM","GET_FAQ_GROUPS","GET_FAQ_ITEM","initialState","groups","items","active_item","FAQReducer","state","action","type","payload","getFaqGroupsSuccess","getFaqItemsSuccess","getFaqGroups","dispatch","response","getFaq_Group","data","ActiveId","item","active_Item","getFaq_Item","getFaqItems"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,WAArB;AACA,SAAwBC,WAAxB,EAAqCC,cAArC,EAAqDC,YAArD,QAAqF,YAArF;AAQA,IAAIC,YAA0B,GAAG;AAC7BC,EAAAA,MAAM,EAAE,EADqB;AAE7BC,EAAAA,KAAK,EAAE,EAFsB;AAG7BC,EAAAA,WAAW,EAAE;AAHgB,CAAjC;AAMA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkD;AACxE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,cAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAWJ,QAAAA,MAAM,EAAEK,MAAM,CAACE;AAA1B,OAAP;;AACJ,SAAKX,WAAL;AACI,aAAO,EAAC,GAAGQ,KAAJ;AAAWF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAA/B,OAAP;;AACJ,SAAKT,YAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAWH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAAzB,OAAP;AACJ;AACA;;AACA;AACI,aAAOH,KAAP;AAVR;AAYH,CAbM;;AAeP,MAAMI,mBAAmB,GAAID,OAAD,KAErB;AAACD,EAAAA,IAAI,EAAET,cAAP;AAAuBU,EAAAA;AAAvB,CAFqB,CAA5B;;AAGA,MAAME,kBAAkB,GAAIF,OAAD,KAMpB;AAACD,EAAAA,IAAI,EAAER,YAAP;AAAqBS,EAAAA;AAArB,CANoB,CAA3B,C,CAOA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMG,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAyB;AACvD,MAAIC,QAAQ,GAAG,MAAMjB,MAAM,CAACkB,YAAP,EAArB;AACAF,EAAAA,QAAQ,CAACH,mBAAmB,CAACI,QAAQ,CAACE,IAAV,CAApB,CAAR;AACH,CAHM;AAIP,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAe,MAAOL,QAAP,IAAwB;AAC3D;AACA,QAAOhB,MAAM,CAACsB,WAAP,CAAmBD,IAAnB,CAAP;AACArB,EAAAA,MAAM,CAACuB,WAAP,GAH2D,CAI3D;AACA;AAEH,CAPM;AASP,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOR,QAAP,IAAwB;AACrD,MAAIC,QAAQ,GAAG,MAAMjB,MAAM,CAACuB,WAAP,EAArB;AACAP,EAAAA,QAAQ,CAACF,kBAAkB,CAACG,QAAQ,CAACE,IAAV,CAAnB,CAAR;AACH,CAHM","sourcesContent":["import {faqAPI} from \"../../api\"\nimport {FaqActionTypes, ACTIVE_ITEM, GET_FAQ_GROUPS, GET_FAQ_ITEM, MAKE_ACTIVE} from \"./FAQTypes\";\n\ntype initialState = {\n    groups: Array<string | number>,\n    items: Array<any>\n    active_item: any\n}\n\nlet initialState: initialState = {\n    groups: [],\n    items: [],\n    active_item: null\n}\n\nexport const FAQReducer = (state = initialState, action: FaqActionTypes) => {\n    switch (action.type) {\n        case GET_FAQ_GROUPS:\n            return {...state, groups: action.payload}\n        case ACTIVE_ITEM:\n            return {...state, active_item: action.payload}\n        case GET_FAQ_ITEM:\n            return {...state, items: action.payload}\n        // case MAKE_ACTIVE:\n        //     return {...state, active_item: {...state.active_item, Active: !state.active_item.Active}}\n        default:\n            return state\n    }\n}\n\nconst getFaqGroupsSuccess = (payload: {\n\n}) => ({type: GET_FAQ_GROUPS, payload})\nconst getFaqItemsSuccess = (payload: {\n        id: number,\n        Title: string,\n        Answer: string,\n        Active: boolean,\n        Group: string\n}) => ({type: GET_FAQ_ITEM, payload})\n// const activeIdSuccess = (item: {\n//         id: number,\n//         Title: string\n// }) => ({type: ACTIVE_ITEM, payload: item})\n\nexport const getFaqGroups = () => async (dispatch: any) => {\n    let response = await faqAPI.getFaq_Group()\n    dispatch(getFaqGroupsSuccess(response.data))\n}\nexport const ActiveId = (item: any) => async (dispatch:any) => {\n    debugger\n    await  faqAPI.active_Item(item)\n    faqAPI.getFaq_Item()\n    // dispatch(activeIdSuccess(item))\n    // dispatch({type: MAKE_ACTIVE})\n\n}\n\nexport const getFaqItems = () => async (dispatch:any) => {\n    let response = await faqAPI.getFaq_Item()\n    dispatch(getFaqItemsSuccess(response.data))\n}\n"]},"metadata":{},"sourceType":"module"}