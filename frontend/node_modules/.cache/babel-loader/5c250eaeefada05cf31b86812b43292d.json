{"ast":null,"code":"import { faqAPI } from \"../../api\";\nconst ACTIVE_ID = \"ACTIVE_ID\";\nconst GET_FAQ_GROUPS = \"GET-FAQ-GROUPS\";\nconst GET_FAQ_ITEM = \"GET-FAQ-ITEM\";\nlet initialState = {\n  groups: [],\n  items: [],\n  active_id: 0\n};\nexport const FAQReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_FAQ_GROUPS:\n      return { ...state,\n        groups: action.payload\n      };\n\n    case ACTIVE_ID:\n      return { ...state,\n        active_id: action.payload\n      };\n\n    case GET_FAQ_ITEM:\n      return { ...state,\n        items: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst getFaqGroupsSuccess = payload => ({\n  type: GET_FAQ_GROUPS,\n  payload\n});\n\nconst getFaqItemsSuccess = payload => ({\n  type: GET_FAQ_ITEM,\n  payload\n});\n\nconst activeIdSuccess = item => ({\n  type: ACTIVE_ID,\n  payload: item\n});\n\nexport const getFaqGroups = () => async dispatch => {\n  let response = await faqAPI.getFaq_Group();\n  dispatch(getFaqGroupsSuccess(response.data));\n};\nexport const ActiveId = item => async dispatch => {\n  debugger;\n  dispatch(activeIdSuccess(item));\n};\nexport const getFaqItems = () => async dispatch => {\n  let response = await faqAPI.getFaq_Item();\n  dispatch(getFaqItemsSuccess(response.data));\n};","map":{"version":3,"sources":["/home/vsevolod/Desktop/TextileSpot. REACT/textilespot./src/redux/reducers/FAQReducer.jsx"],"names":["faqAPI","ACTIVE_ID","GET_FAQ_GROUPS","GET_FAQ_ITEM","initialState","groups","items","active_id","FAQReducer","state","action","type","payload","getFaqGroupsSuccess","getFaqItemsSuccess","activeIdSuccess","item","getFaqGroups","dispatch","response","getFaq_Group","data","ActiveId","getFaqItems","getFaq_Item"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,WAArB;AAEA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,YAAY,GAAG,cAArB;AAEA,IAAIC,YAAY,GAAE;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,SAAS,EAAG;AAHK,CAAlB;AAMA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAK,GAACL,YAAP,EAAqBM,MAArB,KAA+B;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,cAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAWJ,QAAAA,MAAM,EAAEK,MAAM,CAACE;AAA1B,OAAP;;AACJ,SAAKX,SAAL;AACI,aAAO,EAAC,GAAGQ,KAAJ;AAAWF,QAAAA,SAAS,EAAEG,MAAM,CAACE;AAA7B,OAAP;;AACJ,SAAKT,YAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAWH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAAzB,OAAP;;AACJ;AACK,aAAOH,KAAP;AART;AAUH,CAXM;;AAaP,MAAMI,mBAAmB,GAAID,OAAD,KAAc;AAACD,EAAAA,IAAI,EAAET,cAAP;AAAuBU,EAAAA;AAAvB,CAAd,CAA5B;;AACA,MAAME,kBAAkB,GAAIF,OAAD,KAAc;AAACD,EAAAA,IAAI,EAAER,YAAP;AAAqBS,EAAAA;AAArB,CAAd,CAA3B;;AACA,MAAMG,eAAe,GAAIC,IAAD,KAAW;AAACL,EAAAA,IAAI,EAAEV,SAAP;AAAkBW,EAAAA,OAAO,EAACI;AAA1B,CAAX,CAAxB;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAChD,MAAIC,QAAQ,GAAG,MAAMnB,MAAM,CAACoB,YAAP,EAArB;AACAF,EAAAA,QAAQ,CAACL,mBAAmB,CAACM,QAAQ,CAACE,IAAV,CAApB,CAAR;AACC,CAHE;AAIP,OAAO,MAAMC,QAAQ,GAAIN,IAAD,IAAU,MAAME,QAAN,IAAkB;AAChD;AACAA,EAAAA,QAAQ,CAACH,eAAe,CAACC,IAAD,CAAhB,CAAR;AAIH,CANM;AAOP,OAAO,MAAMO,WAAW,GAAG,MAAM,MAAML,QAAN,IAAkB;AAChD,MAAIC,QAAQ,GAAI,MAAMnB,MAAM,CAACwB,WAAP,EAAtB;AACCN,EAAAA,QAAQ,CAACJ,kBAAkB,CAACK,QAAQ,CAACE,IAAV,CAAnB,CAAR;AACH,CAHM","sourcesContent":["import {faqAPI} from \"../../api\"\n\nconst ACTIVE_ID = \"ACTIVE_ID\"\nconst GET_FAQ_GROUPS = \"GET-FAQ-GROUPS\"\nconst GET_FAQ_ITEM = \"GET-FAQ-ITEM\"\n\nlet initialState ={\n groups :[],\n items :[],\n active_id : 0\n}\n\nexport const FAQReducer = (state=initialState, action) =>{\n    switch (action.type) {\n        case GET_FAQ_GROUPS:\n            return {...state, groups: action.payload}\n        case ACTIVE_ID:\n            return {...state, active_id: action.payload}\n        case GET_FAQ_ITEM:\n            return {...state, items: action.payload}\n        default:\n             return state\n    }\n}\n\nconst getFaqGroupsSuccess = (payload) => ({type: GET_FAQ_GROUPS, payload})\nconst getFaqItemsSuccess = (payload) => ({type: GET_FAQ_ITEM, payload})\nconst activeIdSuccess = (item) => ({type: ACTIVE_ID, payload:item})\n\nexport const getFaqGroups = () => async dispatch => {\n    let response = await faqAPI.getFaq_Group()\n    dispatch(getFaqGroupsSuccess(response.data))\n    }\nexport const ActiveId = (item) => async dispatch => {\n    debugger\n    dispatch(activeIdSuccess(item))\n\n\n\n}\nexport const getFaqItems = () => async dispatch => {\n   let response =  await faqAPI.getFaq_Item() \n    dispatch(getFaqItemsSuccess(response.data))\n}"]},"metadata":{},"sourceType":"module"}