{"ast":null,"code":"var _jsxFileName = \"/home/seva/Desktop/textilespot-master/frontend/src/component/FAQ/FAQ_Group.tsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport s from './FAQ.module.css';\nimport cn from \"classnames\";\nimport { getFaqGroups, getFaqItems, ActiveId } from '../../redux/reducers/FAQReducer';\nimport { faqAPI } from \"../../api/FaqApi\";\nimport { useQuery } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nconst QUERY_FAQItem = gql`\n  query {\n    item {\n        Title\n        Answer\n        Active\n        id\n    }\n}`;\n\nconst FAQItemInfo = () => {\n  const {\n    data,\n    loading\n  } = useQuery(QUERY_FAQItem, {\n    pollInterval: 500 // refetch the result every 0.5 second\n\n  });\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }\n  }, \"Loading...\"); // @ts-ignore\n\n  return data.item.map(({\n    Title,\n    id\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"FaqGroup - \", id, \" \", Title)));\n};\n\nclass FAQ_Group extends Component {\n  componentDidMount() {\n    this.props.getFaqGroups();\n    this.props.getFaqItems();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    debugger;\n\n    if (this.props.active_item !== prevProps.active_item) {\n      faqAPI.active_Item(this.props.active_item);\n    }\n  }\n\n  render() {\n    const ActivateItem = item => {\n      item.Active = !item.Active;\n      this.props.ActiveId(item);\n    };\n\n    const OnClick = item => {\n      ActivateItem(item);\n    };\n\n    const FaqComplect = props => {\n      const items = this.props.items.filter(i => Number(i.Group) === props.id);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: this.props.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row border-bottom ml-3 mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: s.group,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 62\n        }\n      }, props.Title)), items.map(item => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: [s.item, \"d-flex justify-content-between d-flex align-items-center\"].join(' '),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 116\n        }\n      }, item.Title), /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => OnClick(item),\n        className: cn({\n          [s.active]: item.Active\n        }, s.menu_toogle),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        className: cn({\n          [s.active]: item.Active\n        }, s.group, s.dropdown),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, item.Answer))));\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: s.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"container text-center mt-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"FAQ\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"In a professional context it often happens that private or corporate\"), this.props.Groups.map((g, index) => /*#__PURE__*/React.createElement(FaqComplect, {\n      key: index,\n      Title: g.Title,\n      id: g.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 55\n      }\n    })), /*#__PURE__*/React.createElement(FAQItemInfo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    Groups: state.FAQ.groups,\n    items: state.FAQ.items,\n    active_item: state.FAQ.active_item\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getFaqGroups,\n  getFaqItems,\n  faqAPI,\n  ActiveId\n})(FAQ_Group);","map":{"version":3,"sources":["/home/seva/Desktop/textilespot-master/frontend/src/component/FAQ/FAQ_Group.tsx"],"names":["React","Component","connect","s","cn","getFaqGroups","getFaqItems","ActiveId","faqAPI","useQuery","gql","QUERY_FAQItem","FAQItemInfo","data","loading","pollInterval","item","map","Title","id","FAQ_Group","componentDidMount","props","componentDidUpdate","prevProps","prevState","snapshot","active_item","active_Item","render","ActivateItem","Active","OnClick","FaqComplect","items","filter","i","Number","Group","key","group","join","active","menu_toogle","dropdown","Answer","main","Groups","g","index","mapStateToProps","state","FAQ","groups"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport s from './FAQ.module.css'\nimport cn from \"classnames\";\nimport {getFaqGroups, getFaqItems, ActiveId} from '../../redux/reducers/FAQReducer'\nimport {faqAPI} from \"../../api/FaqApi\";\nimport { useQuery } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\nconst QUERY_FAQItem = gql`\n  query {\n    item {\n        Title\n        Answer\n        Active\n        id\n    }\n}`;\n\ntype RootPropsType = {\n    getFaqGroups: () => void,\n    getFaqItems: () => void,\n    active_item: any,\n    ActiveId: (item: {\n        id: number,\n        Title: string,\n        Answer: string,\n        Active: boolean,\n        Group: number\n    }) => void,\n    items: Array<{\n        id: number,\n        Title: string,\n        Answer: string,\n        Active: boolean,\n        Group: number\n    }>,\n    key: any,\n    Groups: Array<{\n        id: number\n        Title: string\n    }>\n}\n\nconst FAQItemInfo = () => {\n  const { data, loading } = useQuery(\n    QUERY_FAQItem, {\n      pollInterval: 500 // refetch the result every 0.5 second\n    }\n  );\n\n  if (loading) return <p>Loading...</p>;\n\n  // @ts-ignore\n    return data.item.map(({ Title, id}) => (\n    <div key={id}>\n      <p>\n        FaqGroup - {id} {Title}\n      </p>\n    </div>\n  ));\n}\n\ntype StateType = {}\n\nclass FAQ_Group extends Component<RootPropsType> {\n    componentDidMount() {\n        this.props.getFaqGroups()\n        this.props.getFaqItems()\n    }\n\n\n    componentDidUpdate(prevProps: RootPropsType, prevState: StateType, snapshot: any) {\n        debugger\n\n        if (this.props.active_item !== prevProps.active_item) {\n            faqAPI.active_Item(this.props.active_item)\n        }\n    }\n\n    render() {\n        const ActivateItem = (item: { id: number, Title: string, Answer: string, Active: boolean, Group: number\n        }) => {\n            item.Active = !item.Active\n            this.props.ActiveId(item)\n        }\n        const OnClick = (item: {\n            id: number,\n            Title: string,\n            Answer: string,\n            Active: boolean,\n            Group: number\n        }) => {\n            ActivateItem(item)\n        }\n        type FaqComplectPropsType = {\n            Title: string,\n            id: number\n        }\n        const FaqComplect = (props: FaqComplectPropsType) => {\n            const items = this.props.items.filter(i => Number(i.Group) === props.id)\n            return (<div key={this.props.key}>\n\n                <div className=\"row border-bottom ml-3 mb-3\"><h5 className={s.group}>{props.Title}</h5></div>\n                {items.map(item => <div>\n                    <h6 className={[s.item, \"d-flex justify-content-between d-flex align-items-center\"].join(' ')}><span\n                        className=\"text-danger\">{item.Title}</span>\n                        <div onClick={() => OnClick(item)}\n                             className={cn({[s.active]: item.Active}, s.menu_toogle)}>\n                        </div>\n                    </h6>\n                    <p className={cn({[s.active]: item.Active}, s.group, s.dropdown)}>{item.Answer}</p>\n                </div>)}\n            </div>)\n        }\n        return (\n            <div className={s.main}>\n                <h3 className=\"container text-center mt-3 mb-3\">FAQ</h3>\n                <p className=\"middle text-center\">In a professional context it often happens that private or\n                    corporate</p>\n                {this.props.Groups.map((g, index) => (<FaqComplect key={index} Title={g.Title} id={g.id}/>))}\n                <FAQItemInfo/>\n            </div>)\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        Groups: state.FAQ.groups,\n        items: state.FAQ.items,\n        active_item: state.FAQ.active_item\n\n    }\n}\n\nexport default connect(mapStateToProps, {getFaqGroups, getFaqItems, faqAPI, ActiveId})(FAQ_Group)"]},"metadata":{},"sourceType":"module"}