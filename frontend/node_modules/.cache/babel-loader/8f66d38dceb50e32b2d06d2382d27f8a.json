{"ast":null,"code":"var _jsxFileName = \"/home/vsevolod/Desktop/TextileSpot. API/client/textilespot./src/component/layout/Alerts.js\";\nimport React, { Component, Fragment } from 'react';\nimport { withAlert } from 'react-alert';\nimport { connect } from 'react-redux';\n\nclass Alerts extends Component {\n  componentDidUpdate(prevProps) {\n    const {\n      error\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      alert.erro('There is an error');\n    }\n\n    this.props.alert.show(\"Wow, look at this\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  error: state.error\n});\n\nexport default connect(mapStateToProps)(withAlert()(Alerts));","map":{"version":3,"sources":["/home/vsevolod/Desktop/TextileSpot. API/client/textilespot./src/component/layout/Alerts.js"],"names":["React","Component","Fragment","withAlert","connect","Alerts","componentDidUpdate","prevProps","error","props","alert","erro","show","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AACA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAE3BK,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AACzB,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKC,KAArB;;AACA,QAAID,KAAK,KAAKD,SAAS,CAACC,KAAxB,EAA8B;AAC1BE,MAAAA,KAAK,CAACC,IAAN,CAAW,mBAAX;AACH;;AACD,SAAKF,KAAL,CAAWC,KAAX,CAAiBE,IAAjB,CAAsB,mBAAtB;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAGH;;AAb0B;;AAgB/B,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCP,EAAAA,KAAK,EAAEO,KAAK,CAACP;AADmB,CAAZ,CAAxB;;AAIA,eAAeJ,OAAO,CAACU,eAAD,CAAP,CAAyBX,SAAS,GAAGE,MAAH,CAAlC,CAAf","sourcesContent":["import React, { Component , Fragment} from 'react';\nimport {withAlert} from 'react-alert';\nimport {connect} from 'react-redux'\nclass Alerts extends Component {\n\n    componentDidUpdate(prevProps){\n        const {error} = this.props;\n        if (error !== prevProps.error){\n            alert.erro('There is an error')\n        }\n        this.props.alert.show(\"Wow, look at this\")\n    }\n    render() {\n        return <Fragment>\n\n        </Fragment>\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    error: state.error\n})\n\nexport default connect(mapStateToProps)(withAlert()(Alerts))"]},"metadata":{},"sourceType":"module"}