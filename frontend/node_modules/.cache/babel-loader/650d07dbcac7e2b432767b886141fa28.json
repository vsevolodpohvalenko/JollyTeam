{"ast":null,"code":"var _jsxFileName = \"/home/seva/Desktop/textilespot-master/frontend/src/component/FAQ/FAQ_Group.tsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport s from './FAQ.module.css';\nimport cn from \"classnames\";\nimport { getFaqGroups, getFaqItems, ActiveId } from '../../redux/reducers/FAQReducer';\nimport { faqAPI } from \"../../api/FaqApi\";\nimport { useQuery } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nconst QUERY_FAQGroups = gql`\n        query {\n            FAQGroups {\n                Title,\n                id\n            }\n            }`;\n\nclass FAQ_Group extends Component {\n  componentDidMount() {\n    this.props.getFaqGroups();\n    this.props.getFaqItems();\n  } //\n  // componentDidUpdate(prevProps: RootPropsType, prevState: StateType, snapshot: any) {\n  //     debugger\n  //\n  //     if (this.props.active_item !== prevProps.active_item) {\n  //         faqAPI.active_Item(this.props.active_item)\n  //     }\n  // }\n\n\n  render() {\n    const ActivateItem = item => {\n      item.Active = !item.Active;\n      this.props.ActiveId(item);\n    };\n\n    const OnClick = item => {\n      ActivateItem(item);\n    };\n\n    const ItemsGroup = ({\n      id,\n      items,\n      Title\n    }) => {\n      const suitableItems = items.filter(i => Number(i.Group) === Number(id));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row border-bottom ml-3 mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: s.group,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 62\n        }\n      }, Title)), suitableItems.map(item => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 51\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: [s.item, \"d-flex justify-content-between d-flex align-items-center\"].join(' '),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 116\n        }\n      }, item.Title), /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => OnClick(item),\n        className: cn({\n          [s.active]: item.Active\n        }, s.menu_toogle),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        className: cn({\n          [s.active]: item.Active\n        }, s.group, s.dropdown),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, item.Answer))));\n    };\n\n    const FaqComplect = props => {\n      const {\n        data,\n        loading\n      } = useQuery(QUERY_FAQGroups, {\n        pollInterval: 500 // refetch the result every 0.5 second\n\n      });\n      let items = props.items;\n      if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 33\n        }\n      }, \"Loading...\");\n      return data.FAQGroups.map(({\n        Title,\n        id\n      }) => /*#__PURE__*/React.createElement(ItemsGroup, {\n        id: id,\n        items: items,\n        Title: Title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 58\n        }\n      }));\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: s.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"container text-center mt-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, \"FAQ\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"In a professional context it often happens that private or corporate\"), this.props.items.length >= 1 && /*#__PURE__*/React.createElement(FaqComplect, {\n      items: this.props.items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 51\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    Groups: state.FAQ.groups,\n    items: state.FAQ.items,\n    active_item: state.FAQ.active_item\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getFaqGroups,\n  getFaqItems,\n  faqAPI,\n  ActiveId\n})(FAQ_Group);","map":{"version":3,"sources":["/home/seva/Desktop/textilespot-master/frontend/src/component/FAQ/FAQ_Group.tsx"],"names":["React","Component","connect","s","cn","getFaqGroups","getFaqItems","ActiveId","faqAPI","useQuery","gql","QUERY_FAQGroups","FAQ_Group","componentDidMount","props","render","ActivateItem","item","Active","OnClick","ItemsGroup","id","items","Title","suitableItems","filter","i","Number","Group","group","map","join","active","menu_toogle","dropdown","Answer","FaqComplect","data","loading","pollInterval","FAQGroups","main","length","mapStateToProps","state","Groups","FAQ","groups","active_item"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport s from './FAQ.module.css'\nimport cn from \"classnames\";\nimport {getFaqGroups, getFaqItems, ActiveId} from '../../redux/reducers/FAQReducer'\nimport {faqAPI} from \"../../api/FaqApi\";\nimport {useQuery} from 'react-apollo';\nimport {gql} from 'apollo-boost';\n\nconst QUERY_FAQGroups = gql`\n        query {\n            FAQGroups {\n                Title,\n                id\n            }\n            }`;\n\ntype RootPropsType = {\n    getFaqGroups: () => void,\n    getFaqItems: () => void,\n    active_item: any,\n    ActiveId: (item: {\n        id: number,\n        Title: string,\n        Answer: string,\n        Active: boolean,\n        Group: number\n    }) => void,\n    items: Array<{\n        id: number,\n        Title: string,\n        Answer: string,\n        Active: boolean,\n        Group: number\n    }>,\n    key: any,\n    Groups: Array<{\n        id: number\n        Title: string\n    }>\n}\n\n\nclass FAQ_Group extends Component<RootPropsType> {\n    componentDidMount() {\n        this.props.getFaqGroups()\n        this.props.getFaqItems()\n    }\n\n    //\n    // componentDidUpdate(prevProps: RootPropsType, prevState: StateType, snapshot: any) {\n    //     debugger\n    //\n    //     if (this.props.active_item !== prevProps.active_item) {\n    //         faqAPI.active_Item(this.props.active_item)\n    //     }\n    // }\n\n    render() {\n\n        const ActivateItem = (item: {\n            id: number, Title: string, Answer: string, Active: boolean, Group: number\n        }) => {\n            item.Active = !item.Active\n            this.props.ActiveId(item)\n        }\n        const OnClick = (item: {\n            id: number,\n            Title: string,\n            Answer: string,\n            Active: boolean,\n            Group: number\n        }) => {\n            ActivateItem(item)\n        }\n        const ItemsGroup = ({id, items, Title}: any) => {\n            const suitableItems = items.filter((i: {\n            id: number,\n            Title: string,\n            Answer: string,\n            Active: boolean,\n            Group: number\n        }) => Number(i.Group) === Number(id))\n            return (<div key={id}>\n                <div className=\"row border-bottom ml-3 mb-3\"><h5 className={s.group}>{Title}</h5></div>\n                {suitableItems.map((item: any) => <div>\n                    <h6 className={[s.item, \"d-flex justify-content-between d-flex align-items-center\"].join(' ')}><span\n                        className=\"text-danger\">{item.Title}</span>\n                        <div onClick={() => OnClick(item)}\n                             className={cn({[s.active]: item.Active}, s.menu_toogle)}>\n                        </div>\n                    </h6>\n                    <p className={cn({[s.active]: item.Active}, s.group, s.dropdown)}>{item.Answer}</p>\n                </div>)}\n            </div>)\n        }\n        const FaqComplect = (props: {\n            items: Array<{\n                id: number,\n                Title: string,\n                Answer: string,\n                Active: boolean,\n                Group: number\n            }>\n        }) => {\n            const {data, loading} = useQuery(\n                QUERY_FAQGroups, {\n                    pollInterval: 500 // refetch the result every 0.5 second\n                }\n            );\n\n\n            let items = props.items\n            if (loading) return <p>Loading...</p>;\n            return (\n                data.FAQGroups.map(({Title, id}: any) => <ItemsGroup id={id} items={items} Title={Title}   />\n                ))\n        }\n        return (\n            <div className={s.main}>\n                <h3 className=\"container text-center mt-3 mb-3\">FAQ</h3>\n                <p className=\"middle text-center\">In a professional context it often happens that private or\n                    corporate</p>\n\n                {this.props.items.length >= 1 && (<FaqComplect items={this.props.items}/>)}\n            </div>)\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        Groups: state.FAQ.groups,\n        items: state.FAQ.items,\n        active_item: state.FAQ.active_item\n\n    }\n}\n\nexport default connect(mapStateToProps, {getFaqGroups, getFaqItems, faqAPI, ActiveId})(FAQ_Group)"]},"metadata":{},"sourceType":"module"}