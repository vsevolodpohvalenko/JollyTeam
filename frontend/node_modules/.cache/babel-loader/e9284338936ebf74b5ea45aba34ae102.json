{"ast":null,"code":"import axios from 'axios';\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nconst config2 = {\n  headers: {\n    'Content-Type': 'multipart/form-data'\n  }\n};\nconst instance = axios.create({\n  baseURL: 'http://127.0.0.1:8000/'\n});\nexport const faqAPI = {\n  getFaq_Group: () => {\n    return instance('api/faq_group/');\n  },\n  getFaq_Item: () => {\n    return instance.get('api/faq_item');\n  },\n  active_Item: item => {\n    return instance.put(`api/faq_item/${item.id}/`, {\n      Group: item.Group,\n      Title: item.Title,\n      Answer: item.Answer,\n      Active: item.Active\n    });\n  }\n};\nexport const authAPI = {\n  getUser: tokenConfig => {\n    return instance.get('auth/users/me/', tokenConfig);\n  },\n  login: body => {\n    return instance.post('auth/token/login', body, config);\n  },\n  logout: tokenConfig => {\n    return instance.post('auth/token/logout', \"\", tokenConfig);\n  },\n  register: body => {\n    return instance.post('auth/users/', body, config);\n  },\n  forgot_password: body => {\n    return instance.post('auth/users/reset_password/', body);\n  },\n  reset_password: body => {\n    return instance.post('auth/users/reset_password_confirm/', body);\n  },\n  activate: body => {\n    debugger;\n    return instance.post('auth/users/activation/', {\n      uid: body.uid,\n      token: body.token\n    });\n  }\n};\nexport const contentAPI = {\n  content: () => {\n    return instance.get('api/ContentPage/');\n  }\n};\nexport const contactAPI = {\n  PutContact: body => {\n    return instance.post('api/Contact/', body, config);\n  },\n  GetContact: () => {\n    return instance.get('api/Contact/', config);\n  }\n};\nexport const profileAPI = {\n  PostProfile: id => {\n    debugger;\n    let form_data = new FormData();\n    form_data.append('owner', String(id));\n    return instance.post('api/manufacturerProfilePage/', form_data, config2);\n  },\n  PutProfile: (form_data, id) => {\n    debugger;\n    return instance.patch(`api/manufacturerProfilePage/${id}/`, form_data, config2);\n  },\n  PatchDocuments: (form_data, id) => {\n    return instance.patch(`api/Document/${id + 1}/`, form_data, config2);\n  },\n  PostDocuments: id => {\n    let form_data = new FormData();\n    form_data.append('owner', String(id));\n    return instance.post(`api/Document/`, form_data, config2);\n  },\n  DeleteDocuments: id => {\n    return instance.delete(`api/Document/${id + 1}`);\n  },\n  getCountries: () => {\n    return axios.get('http://restcountries.eu/rest/v2/all');\n  },\n  getProfile: () => {\n    return instance.get('api/manufacturerProfilePage');\n  },\n  getDocuments: () => {\n    debugger;\n    return instance.get('api/Document/');\n  },\n  getCategory: () => {\n    return instance.get(\"api/Category/\");\n  },\n  getSearcheddData: search => {\n    debugger;\n    return instance.get(`manufacturerProfilePage?search=${search}`);\n  },\n  postRequestForQuotations: request => {\n    return instance.post('api/RequestForQuotation/', request);\n  }\n};\nexport const findPageAPI = {\n  findPage: search => {\n    debugger;\n    return instance.get(`links?search=${search}`);\n  }\n};","map":{"version":3,"sources":["/home/seva/Desktop/textilespot-master/frontend/src/api.ts"],"names":["axios","config","headers","config2","instance","create","baseURL","faqAPI","getFaq_Group","getFaq_Item","get","active_Item","item","put","id","Group","Title","Answer","Active","authAPI","getUser","tokenConfig","login","body","post","logout","register","forgot_password","reset_password","activate","uid","token","contentAPI","content","contactAPI","PutContact","GetContact","profileAPI","PostProfile","form_data","FormData","append","String","PutProfile","patch","PatchDocuments","PostDocuments","DeleteDocuments","delete","getCountries","getProfile","getDocuments","getCategory","getSearcheddData","search","postRequestForQuotations","request","findPageAPI","findPage"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nconst config = {\n    headers: {\n        'Content-Type': 'application/json',\n\n    }\n}\nconst config2 = {headers: {'Content-Type': 'multipart/form-data'}};\n\n\nconst instance = axios.create({\n    baseURL: 'http://127.0.0.1:8000/',\n\n\n});\n\nexport const faqAPI = {\n    getFaq_Group: () => {\n        return instance('api/faq_group/')\n    },\n    getFaq_Item: () => {\n        return instance.get('api/faq_item')\n    },\n    active_Item: (item: {\n        id: number,\n        Title: string,\n        Answer: string,\n        Active: boolean,\n        Group: string\n    }) => {\n        return instance.put(`api/faq_item/${item.id}/`, {\n            Group: item.Group,\n            Title: item.Title,\n            Answer: item.Answer,\n            Active: item.Active,\n        })\n    }\n}\nexport const authAPI = {\n    getUser: (tokenConfig: any) => {\n\n        return instance.get('auth/users/me/', tokenConfig)\n    },\n    login: (body: any) => {\n\n        return instance.post('auth/token/login', body, config)\n    },\n    logout: (tokenConfig: any) => {\n\n        return instance.post('auth/token/logout', \"\", tokenConfig)\n    },\n    register: (body: any) => {\n\n        return instance.post('auth/users/', body, config)\n    },\n    forgot_password: (body: any) => {\n\n        return instance.post('auth/users/reset_password/', body)\n    },\n    reset_password: (body: any) => {\n\n        return instance.post('auth/users/reset_password_confirm/', body)\n    },\n    activate: (body: any) => {\n        debugger\n        return instance.post('auth/users/activation/', {\n            uid: body.uid,\n            token: body.token\n        })\n    },\n}\n\nexport const contentAPI = {\n    content: () => {\n\n        return instance.get('api/ContentPage/')\n    }\n}\n\nexport const contactAPI = {\n    PutContact: (body: {\n        companyName: string,\n        emailAddress: string,\n        id: number,\n        message: string,\n        name: string,\n        owner: number,\n        phoneNumber: string,\n        subject: string\n    }) => {\n        return instance.post('api/Contact/', body, config)\n    },\n    GetContact: () => {\n        return instance.get('api/Contact/', config)\n    }\n}\n\nexport const profileAPI = {\n\n    PostProfile: (id: number) => {\n        debugger\n        let form_data = new FormData();\n        form_data.append('owner', String(id));\n        return instance.post('api/manufacturerProfilePage/', form_data, config2)\n    },\n\n    PutProfile: (form_data: any, id: number) => {\n        debugger\n        return instance.patch(`api/manufacturerProfilePage/${id}/`, form_data, config2)\n    },\n    PatchDocuments: (form_data: any, id: number) => {\n        return instance.patch(`api/Document/${id + 1}/`, form_data, config2)\n    },\n    PostDocuments: (id: any) => {\n        let form_data = new FormData();\n        form_data.append('owner', String(id));\n        return instance.post(`api/Document/`, form_data, config2)\n    },\n    DeleteDocuments: (id: number) => {\n        return instance.delete(`api/Document/${id + 1}`)\n    },\n    getCountries: () => {\n        return axios.get('http://restcountries.eu/rest/v2/all')\n    },\n    getProfile: () => {\n        return instance.get('api/manufacturerProfilePage')\n    },\n    getDocuments: () => {\n        debugger\n        return instance.get('api/Document/')\n    },\n    getCategory: () => {\n        return instance.get(\"api/Category/\")\n    },\n    getSearcheddData: (search: string) => {\n        debugger\n        return instance.get(`manufacturerProfilePage?search=${search}`)\n    },\n    postRequestForQuotations: (request: any) => {\n        return instance.post('api/RequestForQuotation/', request)\n    }\n}\n\n\nexport const findPageAPI = {\n    findPage: (search: string) => {\n        debugger\n        return instance.get(`links?search=${search}`)\n    }\n}"]},"metadata":{},"sourceType":"module"}