{"ast":null,"code":"var _jsxFileName = \"/home/seva/Desktop/textilespot-master/frontend/src/component/common/PrivateRoute.tsx\";\nimport React from 'react';\nimport { MainTemplate } from '../Templates/main_template';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Preloader from \"../Preloader/preloader\";\n\nconst PrivateRoute = ({\n  component: Component,\n  isLoading,\n  auth_token,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => {\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(Preloader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 25\n        }\n      }));\n    } else if (!auth_token) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(MainTemplate, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      })));\n    }\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}));\n\nconst mapStateToProps = state => ({\n  auth_token: state.auth.auth_token,\n  isLoading: state.auth.isLoading\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/home/seva/Desktop/textilespot-master/frontend/src/component/common/PrivateRoute.tsx"],"names":["React","MainTemplate","Route","Redirect","connect","Preloader","PrivateRoute","component","Component","isLoading","auth_token","rest","props","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,4BAA3B;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuBC,EAAAA,SAAvB;AAAkCC,EAAAA,UAAlC;AAA8C,KAAGC;AAAjD,CAAD,kBACjB,oBAAC,KAAD,oBAAWA,IAAX;AACA,EAAA,MAAM,EAAKC,KAAD,IAAW;AACjB,QAAIH,SAAJ,EAAc;AACV,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAK,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL,CAAP;AACH,KAFD,MAGK,IAAI,CAACC,UAAL,EAAiB;AAClB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFI,MAGD;AAAC,0BACL,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA,CADK;AAGY;AACpB,GAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ;;AAoBA,MAAMC,eAAe,GAAIC,KAAD,KAA0B;AAC9CJ,EAAAA,UAAU,EAAEI,KAAK,CAACC,IAAN,CAAWL,UADuB;AAE9CD,EAAAA,SAAS,EAAEK,KAAK,CAACC,IAAN,CAAWN;AAFwB,CAA1B,CAAxB;;AAKA,eAAeL,OAAO,CAAsBS,eAAtB,CAAP,CAA8CP,YAA9C,CAAf","sourcesContent":["import React from 'react'\nimport {MainTemplate} from '../Templates/main_template'\nimport {Route, Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {AppStateType} from \"../../redux/redux_store\";\nimport Preloader from \"../Preloader/preloader\";\n\nconst PrivateRoute = ({component: Component, isLoading, auth_token, ...rest}: any) => (\n    <Route {...rest}\n    render = {(props) => {\n        if (isLoading){\n            return <div><Preloader/></div>\n        }\n        else if (!auth_token) {\n            return <Redirect to=\"/login\"/>\n        }\n        else{return (\n        <MainTemplate>\n        <Component {...props} />\n        </MainTemplate>)}\n    }}/>\n)\ntype mapStateToPropsType = {\n    auth_token: number | string,\n    isLoading: boolean\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    auth_token: state.auth.auth_token,\n    isLoading: state.auth.isLoading\n})\n\nexport default connect<mapStateToPropsType>(mapStateToProps)(PrivateRoute)"]},"metadata":{},"sourceType":"module"}