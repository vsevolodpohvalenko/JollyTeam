{"ast":null,"code":"import { profileAPI } from \"../../api\";\nimport { createMessage } from './MessageReducer';\nconst GET_COUNTRIES = \"GET_COUNTRIES\";\nconst GET_PROFILES = \"GET-PROFILES\";\nconst GET_DOCUMENTS = \"GET-DOCUMENTS\";\nconst GET_CATEGORY = \"GET-CATEGORY\";\nconst GET_SEARCHED_PROFILES = \"GET_SEARCHED_PROFILES\";\nlet initialState = {\n  profiles: [],\n  countries: [],\n  documents: [],\n  category: []\n};\nexport const ProfileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_COUNTRIES:\n      return { ...state,\n        countries: action.payload\n      };\n\n    case GET_PROFILES:\n      return { ...state,\n        profiles: action.payload\n      };\n\n    case GET_DOCUMENTS:\n      return { ...state,\n        documents: action.payload\n      };\n\n    case GET_CATEGORY:\n      return { ...state,\n        category: action.payload\n      };\n\n    case GET_SEARCHED_PROFILES:\n      return { ...state,\n        profiles: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst getCountriesSuccessful = payload => ({\n  type: GET_COUNTRIES,\n  payload\n});\n\nconst getProfilesSuccessful = payload => ({\n  type: GET_PROFILES,\n  payload\n});\n\nconst getDocumentsSuccessful = payload => ({\n  type: GET_DOCUMENTS,\n  payload\n});\n\nconst getCategorySuccessful = payload => ({\n  type: GET_CATEGORY,\n  payload\n});\n\nconst getSearchedProfiles = payload => ({\n  type: GET_SEARCHED_PROFILES,\n  payload\n});\n\nexport const GetCountries = () => async dispatch => {\n  const response = await profileAPI.getCountries();\n  dispatch(getCountriesSuccessful(response.data));\n};\nexport const GetProfiles = () => async dispatch => {\n  const response = await profileAPI.getProfile();\n  dispatch(getProfilesSuccessful(response.data));\n};\nexport const updateManufacturer = (data, id) => async dispatch => {\n  profileAPI.PutProfile(data, id);\n  dispatch(createMessage({\n    registred: \"Your Profile was Submitted!\"\n  }));\n};\nexport const updateDocument = (data, id) => async dispatch => {\n  profileAPI.PatchDocuments(data, id);\n  dispatch(createMessage({\n    registred: \"Documents for your Profile were Submitted!\"\n  }));\n};\nexport const postDocument = id => async dispatch => {\n  await profileAPI.PostDocuments(id);\n  const response = await profileAPI.getDocuments();\n  dispatch(getDocumentsSuccessful(response.data));\n  dispatch(createMessage({\n    registred: \"One more document was added\"\n  }));\n};\nexport const GetDocuments = () => async dispatch => {\n  debugger;\n  const response = await profileAPI.getDocuments();\n  dispatch(getDocumentsSuccessful(response.data));\n};\nexport const GetCategory = () => async dispatch => {\n  const response = await profileAPI.getCategory();\n  dispatch(getCategorySuccessful(response.data));\n};\nexport const GetSearchedData = search => async dispatch => {\n  debugger;\n  const response = await profileAPI.getSearcheddData(search);\n  dispatch(getSearchedProfiles(response.data));\n};","map":{"version":3,"sources":["/home/seva/Desktop/textilespot-master/frontend/src/redux/reducers/ProfileReducer.jsx"],"names":["profileAPI","createMessage","GET_COUNTRIES","GET_PROFILES","GET_DOCUMENTS","GET_CATEGORY","GET_SEARCHED_PROFILES","initialState","profiles","countries","documents","category","ProfileReducer","state","action","type","payload","getCountriesSuccessful","getProfilesSuccessful","getDocumentsSuccessful","getCategorySuccessful","getSearchedProfiles","GetCountries","dispatch","response","getCountries","data","GetProfiles","getProfile","updateManufacturer","id","PutProfile","registred","updateDocument","PatchDocuments","postDocument","PostDocuments","getDocuments","GetDocuments","GetCategory","getCategory","GetSearchedData","search","getSearcheddData"],"mappings":"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","sourcesContent":["import { profileAPI } from \"../../api\"\nimport {createMessage} from './MessageReducer'\nconst GET_COUNTRIES = \"GET_COUNTRIES\"\nconst GET_PROFILES = \"GET-PROFILES\"\nconst GET_DOCUMENTS = \"GET-DOCUMENTS\"\nconst GET_CATEGORY = \"GET-CATEGORY\"\nconst GET_SEARCHED_PROFILES = \"GET_SEARCHED_PROFILES\"\n\nlet initialState = {\n    profiles: [],\n    countries: [],\n    documents: [],\n    category: []\n};\n\nexport const ProfileReducer = (state = initialState, action) => {\n    switch (action.type){\n        case GET_COUNTRIES:\n            return{...state, countries: action.payload}\n        case GET_PROFILES:\n            return {...state, profiles:  action.payload}\n        case GET_DOCUMENTS:\n            return {...state, documents:  action.payload}\n        case GET_CATEGORY:\n            return {...state, category: action.payload}\n        case GET_SEARCHED_PROFILES:\n            return {...state, profiles:  action.payload}\n        default: \n            return state \n         }\n    }\n\nconst getCountriesSuccessful = (payload) => ({type: GET_COUNTRIES, payload})\nconst getProfilesSuccessful = (payload) => ({type: GET_PROFILES, payload})\nconst getDocumentsSuccessful = (payload) => ({type: GET_DOCUMENTS, payload})\nconst getCategorySuccessful = (payload) => ({type: GET_CATEGORY, payload})\nconst getSearchedProfiles = (payload) => ({type: GET_SEARCHED_PROFILES, payload})\n\nexport const GetCountries = () => async(dispatch) => {\n    const response = await profileAPI.getCountries()\n    dispatch(getCountriesSuccessful(response.data))\n}\n\nexport const GetProfiles = () => async(dispatch) => {\n    const response = await profileAPI.getProfile()\n    dispatch(getProfilesSuccessful(response.data))\n}\nexport const updateManufacturer = (data, id) => async (dispatch) => {\n    profileAPI.PutProfile(data, id)\n    dispatch(\n            createMessage({registred: \"Your Profile was Submitted!\"}))\n}\nexport const updateDocument = (data, id) => async (dispatch) => {\n    profileAPI.PatchDocuments(data, id)\n    dispatch(createMessage({registred: \"Documents for your Profile were Submitted!\"}))\n\n}\nexport const postDocument = (id) => async (dispatch) => {\n    await profileAPI.PostDocuments(id)\n    const response = await profileAPI.getDocuments()\n    dispatch(getDocumentsSuccessful(response.data))\n    dispatch(createMessage({registred: \"One more document was added\"}))\n\n}\nexport const GetDocuments = () => async(dispatch) => {\n    debugger\n    const response = await profileAPI.getDocuments()\n    dispatch(getDocumentsSuccessful(response.data))\n}\n\nexport const GetCategory = () => async(dispatch) => {\n    const response = await profileAPI.getCategory()\n    dispatch(getCategorySuccessful(response.data))\n}\n\nexport const GetSearchedData = (search) => async(dispatch) => {\n    debugger\n    const response = await profileAPI.getSearcheddData(search)\n    dispatch(getSearchedProfiles(response.data))\n}"]},"metadata":{},"sourceType":"module"}