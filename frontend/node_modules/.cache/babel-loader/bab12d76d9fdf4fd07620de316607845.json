{"ast":null,"code":"import axios from \"axios\";\nimport { returnErrors } from \"./ErrorsReducer\"; //import {authAPI} from \"../../api\"\n\nconst USER_LOADING = 'USER_LOADING';\nconst USER_LOADED = 'USER_LOADED';\nconst AUTH_ERROR = 'AUTH_ERROR';\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nconst LOGIN_FAIL = 'LOGIN_FAIL';\nconst REGISTER_FAIL = 'REGISTER_FAIL';\nconst LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nconst REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nlet initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\nexport const AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n\n    case AUTH_ERROR:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n\n    case LOGIN_SUCCESS:\n      debugger;\n      localStorage.setItem('token', action.payload.token);\n      return { ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n\n    case LOGOUT_SUCCESS:\n      return { ...state\n      };\n\n    case LOGIN_FAIL:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst loadUserSuccess = () => ({\n  type: USER_LOADING\n});\n\nconst loginSuccess = payload => ({\n  type: LOGIN_SUCCESS,\n  payload\n});\n\nexport const loadUser = () => (dispatch, getState) => {\n  dispatch(loadUserSuccess());\n  axios.get('http://127.0.0.1:8000/api/auth/get_users', tokenConfig(getState)).then(response => {\n    dispatch({\n      type: USER_LOADED,\n      payload: response.data\n    });\n  });\n};\nexport const logout = () => (dispatch, getState) => {\n  axios.post('http://127.0.0.1:8000/api/auth/logout/', null, tokenConfig(getState)).then(response => {\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n  });\n};\nexport const login = (username, password) => dispatch => {\n  debugger;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    username,\n    password\n  });\n  axios.post('http://127.0.0.1:8000/api/auth/login', body, config).then(response => {\n    debugger;\n    dispatch(loginSuccess(response.data));\n  });\n};\nexport const tokenConfig = getState => {\n  const token = getState().auth.token;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n\n  return config;\n};","map":{"version":3,"sources":["/home/vsevolod/Desktop/TextileSpot. REACT/textilespot./src/redux/reducers/AuthReducer.jsx"],"names":["axios","returnErrors","USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","AuthReducer","state","action","type","payload","removeItem","setItem","loadUserSuccess","loginSuccess","loadUser","dispatch","getState","get","tokenConfig","then","response","data","logout","post","login","username","password","config","headers","body","JSON","stringify","auth"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport {returnErrors} from \"./ErrorsReducer\"\n\n//import {authAPI} from \"../../api\"\nconst USER_LOADING = 'USER_LOADING'\nconst USER_LOADED = 'USER_LOADED'\nconst AUTH_ERROR = 'AUTH_ERROR'\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nconst LOGIN_FAIL = 'LOGIN_FAIL'\nconst REGISTER_FAIL = 'REGISTER_FAIL'\nconst LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nconst REGISTER_SUCCESS = 'REGISTER_SUCCESS'\n\n\n\n\nlet initialState ={\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null\n}\n\nexport const AuthReducer = (state=initialState, action) =>{\n    switch (action.type) {\n        case USER_LOADING :\n            return {...state, isLoading: true}\n        case USER_LOADED:\n            return {...state, isAuthenticated: true, isLoading: false, user: action.payload}\n        case AUTH_ERROR:\n            localStorage.removeItem('token');\n            return {...state, token: null, user:null, isAuthenticated: false, isLoading: false}\n        case LOGIN_SUCCESS:\n            debugger\n            localStorage.setItem('token', action.payload.token)\n            return {...state, ...action.payload, isAuthenticated: true, isLoading: false\n            }\n        case LOGOUT_SUCCESS:\n            return {...state}    \n        case LOGIN_FAIL:\n            localStorage.removeItem('token');\n            return {...state, token: null, user:null, isAuthenticated: false, isLoading: false}\n        default:\n             return state\n    }\n}\n\nconst loadUserSuccess = () => ({type: USER_LOADING})\nconst loginSuccess = (payload) => ({type: LOGIN_SUCCESS, payload})\n\nexport const loadUser = () => (dispatch, getState) => {\n    dispatch(loadUserSuccess());\n\n    axios.get('http://127.0.0.1:8000/api/auth/get_users', tokenConfig(getState))\n    .then(response => {\n        dispatch({\n            type: USER_LOADED,\n            payload: response.data\n        });\n    })\n}\nexport const logout = () => (dispatch, getState) => {\n\n    axios.post('http://127.0.0.1:8000/api/auth/logout/',null, tokenConfig(getState))\n    .then(response => {\n        dispatch({\n            type: LOGOUT_SUCCESS,\n        });\n    })\n}\nexport const login = (username, password) => (dispatch) => {\n    debugger\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    const body = JSON.stringify({username, password})\n    axios.post('http://127.0.0.1:8000/api/auth/login', body, config)\n    .then(response => {\n        debugger\n        dispatch(loginSuccess(response.data));\n    })\n}\n\nexport const tokenConfig = getState => {\n        const token = getState().auth.token;\n    \n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n    \n        if(token){\n            config.headers['Authorization'] = `Token ${token}`;\n        }\n\n\n        return config\n}"]},"metadata":{},"sourceType":"module"}