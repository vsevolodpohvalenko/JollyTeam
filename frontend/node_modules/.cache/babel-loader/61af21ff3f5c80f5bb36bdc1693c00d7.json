{"ast":null,"code":"var _jsxFileName = \"/home/seva/Desktop/textilespot-master/frontend/src/component/accounts/Profile/ProfileEdit/ProfileEdit.tsx\";\nimport React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport s from './ProfileEdit.module.css';\nimport defaultImage from '../../../../media/default.jpg';\nimport defaultThumbnail from '../../../../media/thumbnail.jpg';\nimport Select from 'react-select';\nimport { profileAPI } from \"../../../../api/profileApi\";\n\nlet InputText = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: s.doubleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 37\n    }\n  }, props.element), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: props.element,\n    id: props.element,\n    value: props.value,\n    onChange: props.onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n};\nexport const ProfileEdit = props => {\n  const options = props.countries.map(c => {\n    return {\n      value: c.name,\n      label: c.name\n    };\n  });\n  const categoryOptions = props.category.map(c => {\n    return {\n      value: c.Name,\n      label: c.Name\n    };\n  });\n  const [companyProfilePicture, setCompanyProfilePicture] = useState();\n  const [companyLogo, setCompanyLogo] = useState();\n  const [background, setBackground] = useState(props.previousProfile[props.userID - 1].companyProfilePicture);\n  const [companyName, setCompanyName] = useState(props.previousProfile[props.userID - 1].companyName);\n  const [country, setCountry] = useState(props.previousProfile[props.userID - 1].country);\n  const [companyDescription, setCompanyDescription] = useState(props.previousProfile[props.userID - 1].companyDescription);\n  const [section, setSection] = useState(JSON.parse(props.previousProfile[props.userID - 1].sections));\n  const [Documents, setDocument] = useState(props.documents);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    debugger;\n    let form_data = new FormData();\n    companyProfilePicture !== undefined && form_data.append('companyProfilePicture', companyProfilePicture[0], companyProfilePicture[0].name);\n    companyLogo !== undefined && form_data.append('companyLogo', companyLogo[0], companyLogo[0].name);\n    form_data.append(\"sections\", JSON.stringify(section));\n    form_data.append('companyName', companyName);\n    form_data.append('companyDescription', companyDescription);\n\n    if (typeof country !== \"string\") {\n      form_data.append('country', country.value);\n    } else {\n      form_data.append('country', country);\n    }\n\n    form_data.append('owner', String(props.userID));\n    const id = props.userID;\n    props.updateManufacturer(form_data, id);\n    Documents.forEach((e, index) => {\n      let form_doc_data = new FormData();\n      form_doc_data.append('Title', e.Title);\n      Documents[index].Thumbnail.name && form_doc_data.append('Thumbnail', e.Thumbnail);\n      Documents[index].Download.name && form_doc_data.append(\"Download\", e.Download);\n      form_doc_data.append('owner', String(props.userID));\n      props.updateDocument(form_doc_data, props.documents[index].id - 1);\n    });\n  };\n\n  const handleDrop = acceptedFiles => {\n    setCompanyProfilePicture(acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n    setBackground(acceptedFiles.map(file => URL.createObjectURL(file)));\n  };\n\n  const Thumbs = props => {\n    const index = props.index;\n    const file = Documents[index];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: s.preview,\n      key: file.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: s.thumbInner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"thumbnail\",\n      src: (file.Thumbnail.preview ? file.Thumbnail.preview : file.Thumbnail) || defaultThumbnail,\n      style: img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    })));\n  };\n\n  const handleDrop4 = acceptedFiles => {\n    debugger;\n    setCompanyLogo(acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n  };\n\n  const CustomDropZone = props => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, props.label), /*#__PURE__*/React.createElement(\"section\", {\n      className: s.thumb,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Dropzone, {\n      onDrop: props.onDrop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps({\n      className: \"dropzone\"\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: s.clip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }, props.p), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }, props.h5), !!props.AllowButton && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 58\n      }\n    }, \"Upload\")))));\n  };\n\n  const SectionhandleInputChange = (e, index) => {\n    debugger;\n    const {\n      name,\n      value\n    } = e;\n    const list = [...section];\n    list[index][name] = value;\n    setSection(list);\n  };\n\n  const DocumentedInputChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const list = [...Documents];\n    list[index][name] = value;\n    setDocument(list);\n  };\n\n  const DocumenthandleInputFileThumbnail = (aceptedFiles, index) => {\n    const {\n      preview\n    } = Object.assign(aceptedFiles[0], {\n      preview: URL.createObjectURL(aceptedFiles[0])\n    });\n    const list = [...Documents];\n    list[index]['Thumbnail'] = aceptedFiles[0];\n    list[index]['preview'] = preview;\n    setDocument(list);\n  };\n\n  const DocumenthandleInputDownload = (acceptedFiles, index) => {\n    debugger;\n    const list = [...Documents];\n    list[index]['Download'] = acceptedFiles[0];\n    setDocument(list);\n  };\n\n  const handleRemoveClick = index => {\n    const list = [...section];\n    list.splice(index, 1);\n    setSection(list);\n  };\n\n  const handleRemoveClick2 = index => {\n    profileAPI.DeleteDocuments(Documents[index].id - 1);\n    const list = [...Documents];\n    list.splice(index, 1);\n    setDocument(list);\n  };\n\n  const handleAddClick = () => {\n    setSection([...section, {\n      Title: \"\",\n      Icon: \"\",\n      Text: \"\"\n    }]);\n  };\n\n  const handleAddClick2 = () => {\n    props.postDocument(props.userID);\n    setDocument([...Documents, {\n      Title: \"\",\n      Thumbnail: \"\",\n      Download: \"\"\n    }]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-group\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      backgroundImage: `linear-gradient( rgba(56, 56, 56, 0.596), rgba(56, 56, 56, 0.596) ), url(${background || defaultImage})`\n    },\n    className: s.pic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: handleDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps({\n    className: \"dropzone\"\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.compamyPictureform,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.clip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 33\n    }\n  }, \"Drag & Drop your company picture here\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 33\n    }\n  }, \"Company Profile Picture\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }, \"Upload\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    id: s.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.double,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    element: \"companyName\",\n    value: companyName,\n    onChange: e => setCompanyName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.select,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(Select, {\n    options: options,\n    defaultValue: {\n      label: country,\n      value: country\n    },\n    placeholder: \"Choose your country\",\n    onChange: e => setCountry(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(InputText, {\n    element: \"companyDescription\",\n    value: companyDescription,\n    onChange: e => setCompanyDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomDropZone, {\n    label: \"Company Logo\",\n    AllowButton: 1,\n    onDrop: handleDrop4,\n    p: \"Drag&Drop Your attachments here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }), section.map((x, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 29\n      }\n    }, \"Section\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: s.double,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: s.doubleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 37\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      placeholder: \"Title\",\n      name: \"Title\",\n      value: x.Title,\n      onChange: e => SectionhandleInputChange(e.target, i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: s.doubleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 37\n      }\n    }, \"Icon\"), /*#__PURE__*/React.createElement(Select, {\n      options: categoryOptions,\n      defaultValue: {\n        label: x.Icon,\n        value: x.Icon\n      },\n      placeholder: \"Icon\",\n      onChange: e => SectionhandleInputChange({\n        name: \"Icon\",\n        value: e.value\n      }, i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 29\n      }\n    }, \"Text\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      placeholder: \"Text\",\n      name: \"Text\",\n      value: x.Text,\n      onChange: e => SectionhandleInputChange(e.target, i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 29\n      }\n    }, section.length !== 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      onClick: () => handleRemoveClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 33\n      }\n    }, \"Remove\"), section.length - 1 === i && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      onClick: () => {\n        handleAddClick();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 62\n      }\n    }, \"Add 1 Section\")));\n  }), Documents.map((y, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 29\n      }\n    }, \"Document\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 29\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      placeholder: \"Title\",\n      name: \"Title\",\n      value: y.Title,\n      onChange: e => DocumentedInputChange(e, i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Thumbs, {\n      documents: props.documents,\n      userID: props.userID,\n      index: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(CustomDropZone, {\n      name: \"Thumbnail\",\n      label: \"Thumbnail\",\n      AllowButton: 0,\n      onDrop: acceptedFiles => DocumenthandleInputFileThumbnail(acceptedFiles, i),\n      p: \"Drag&Drop Your attachments here\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(CustomDropZone, {\n      name: \"Download\",\n      label: \"Download\",\n      AllowButton: 1,\n      onDrop: acceptedFiles => DocumenthandleInputDownload(acceptedFiles, i),\n      p: \"Drag&Drop Your attachments here\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 29\n      }\n    }, Documents.length !== 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      onClick: () => handleRemoveClick2(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 33\n      }\n    }, \"Remove\"), Documents.length - 1 === i && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      onClick: () => {\n        handleAddClick2();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 64\n      }\n    }, \"Add 1 Document\")));\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: s.button,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }\n  }, \"Send Form\")));\n};","map":{"version":3,"sources":["/home/seva/Desktop/textilespot-master/frontend/src/component/accounts/Profile/ProfileEdit/ProfileEdit.tsx"],"names":["React","useState","Dropzone","s","defaultImage","defaultThumbnail","Select","profileAPI","InputText","props","doubleInput","element","value","onChange","img","display","width","height","ProfileEdit","options","countries","map","c","name","label","categoryOptions","category","Name","companyProfilePicture","setCompanyProfilePicture","companyLogo","setCompanyLogo","background","setBackground","previousProfile","userID","companyName","setCompanyName","country","setCountry","companyDescription","setCompanyDescription","section","setSection","JSON","parse","sections","Documents","setDocument","documents","handleSubmit","e","preventDefault","form_data","FormData","undefined","append","stringify","String","id","updateManufacturer","forEach","index","form_doc_data","Title","Thumbnail","Download","updateDocument","handleDrop","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","Thumbs","thumbInner","handleDrop4","CustomDropZone","thumb","onDrop","getRootProps","getInputProps","className","clip","p","h5","AllowButton","SectionhandleInputChange","list","DocumentedInputChange","target","DocumenthandleInputFileThumbnail","aceptedFiles","DocumenthandleInputDownload","handleRemoveClick","splice","handleRemoveClick2","DeleteDocuments","handleAddClick","Icon","Text","handleAddClick2","postDocument","backgroundImage","pic","compamyPictureform","main","double","select","x","i","length","y","button"],"mappings":";AAAA,OAAOA,KAAP,IAAuCC,QAAvC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,CAAP,MAAc,0BAAd;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAAQC,UAAR,QAAyB,4BAAzB;;AAQA,IAAIC,SAAS,GAAIC,KAAD,IAAuB;AACnC,sBAAQ;AAAK,IAAA,EAAE,EAAEN,CAAC,CAACO,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQD,KAAK,CAACE,OAAd,CAAxB,eACA;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAA4C,IAAA,WAAW,EAAEF,KAAK,CAACE,OAA/D;AAAwE,IAAA,EAAE,EAAEF,KAAK,CAACE,OAAlF;AACO,IAAA,KAAK,EAAEF,KAAK,CAACG,KADpB;AAC2B,IAAA,QAAQ,EAAEH,KAAK,CAACI,QAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAAR;AAKH,CAND;;AAQA,MAAMC,GAAG,GAAG;AACRC,EAAAA,OAAO,EAAE,OADD;AAERC,EAAAA,KAAK,EAAE,MAFC;AAGRC,EAAAA,MAAM,EAAE;AAHA,CAAZ;AAqCA,OAAO,MAAMC,WAAW,GAAIT,KAAD,IAA0B;AACjD,QAAMU,OAAO,GAAGV,KAAK,CAACW,SAAN,CAAgBC,GAAhB,CAAoBC,CAAC,IAAI;AACrC,WAAO;AAACV,MAAAA,KAAK,EAAEU,CAAC,CAACC,IAAV;AAAgBC,MAAAA,KAAK,EAAEF,CAAC,CAACC;AAAzB,KAAP;AACH,GAFe,CAAhB;AAGA,QAAME,eAAe,GAAGhB,KAAK,CAACiB,QAAN,CAAeL,GAAf,CAAmBC,CAAC,IAAI;AAC5C,WAAO;AAACV,MAAAA,KAAK,EAAEU,CAAC,CAACK,IAAV;AAAgBH,MAAAA,KAAK,EAAEF,CAAC,CAACK;AAAzB,KAAP;AACH,GAFuB,CAAxB;AAIA,QAAM,CAACC,qBAAD,EAAwBC,wBAAxB,IAAoD5B,QAAQ,EAAlE;AACA,QAAM,CAAC6B,WAAD,EAAcC,cAAd,IAAgC9B,QAAQ,EAA9C;AACA,QAAM,CAAC+B,UAAD,EAAaC,aAAb,IAA8BhC,QAAQ,CAAqBQ,KAAK,CAACyB,eAAN,CAAuBzB,KAAK,CAAC0B,MAAP,GAAiB,CAAvC,EAA0CP,qBAA/D,CAA5C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCpC,QAAQ,CAASQ,KAAK,CAACyB,eAAN,CAAuBzB,KAAK,CAAC0B,MAAP,GAAiB,CAAvC,EAA0CC,WAAnD,CAA9C;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBtC,QAAQ,CAA0CQ,KAAK,CAACyB,eAAN,CAAuBzB,KAAK,CAAC0B,MAAP,GAAiB,CAAvC,EAA0CG,OAApF,CAAtC;AACA,QAAM,CAACE,kBAAD,EAAqBC,qBAArB,IAA8CxC,QAAQ,CAASQ,KAAK,CAACyB,eAAN,CAAuBzB,KAAK,CAAC0B,MAAP,GAAiB,CAAvC,EAA0CK,kBAAnD,CAA5D;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwB1C,QAAQ,CAAM2C,IAAI,CAACC,KAAL,CAAWpC,KAAK,CAACyB,eAAN,CAAuBzB,KAAK,CAAC0B,MAAP,GAAiB,CAAvC,EAA0CW,QAArD,CAAN,CAAtC;AACA,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2B/C,QAAQ,CAAMQ,KAAK,CAACwC,SAAZ,CAAzC;;AAGA,QAAMC,YAAY,GAAIC,CAAD,IAAmC;AACpDA,IAAAA,CAAC,CAACC,cAAF;AACA;AACA,QAAIC,SAAS,GAAG,IAAIC,QAAJ,EAAhB;AACA1B,IAAAA,qBAAqB,KAAK2B,SAA1B,IAAwCF,SAAS,CAACG,MAAV,CAAiB,uBAAjB,EAA0C5B,qBAAqB,CAAC,CAAD,CAA/D,EAAoEA,qBAAqB,CAAC,CAAD,CAArB,CAAyBL,IAA7F,CAAxC;AACAO,IAAAA,WAAW,KAAKyB,SAAhB,IAA8BF,SAAS,CAACG,MAAV,CAAiB,aAAjB,EAAgC1B,WAAW,CAAC,CAAD,CAA3C,EAAgDA,WAAW,CAAC,CAAD,CAAX,CAAeP,IAA/D,CAA9B;AACA8B,IAAAA,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6BZ,IAAI,CAACa,SAAL,CAAef,OAAf,CAA7B;AACAW,IAAAA,SAAS,CAACG,MAAV,CAAiB,aAAjB,EAAgCpB,WAAhC;AACAiB,IAAAA,SAAS,CAACG,MAAV,CAAiB,oBAAjB,EAAuChB,kBAAvC;;AACA,QAAI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC;AAC7Be,MAAAA,SAAS,CAACG,MAAV,CAAiB,SAAjB,EAA4BlB,OAAO,CAAC1B,KAApC;AACH,KAFD,MAEM;AACFyC,MAAAA,SAAS,CAACG,MAAV,CAAiB,SAAjB,EAA4BlB,OAA5B;AACH;;AACDe,IAAAA,SAAS,CAACG,MAAV,CAAiB,OAAjB,EAA0BE,MAAM,CAACjD,KAAK,CAAC0B,MAAP,CAAhC;AACA,UAAMwB,EAAE,GAAGlD,KAAK,CAAC0B,MAAjB;AACA1B,IAAAA,KAAK,CAACmD,kBAAN,CAAyBP,SAAzB,EAAoCM,EAApC;AAEAZ,IAAAA,SAAS,CAACc,OAAV,CAAkB,CAACV,CAAD,EAMnBW,KANmB,KAMD;AACb,UAAIC,aAAa,GAAG,IAAIT,QAAJ,EAApB;AACAS,MAAAA,aAAa,CAACP,MAAd,CAAqB,OAArB,EAA8BL,CAAC,CAACa,KAAhC;AACAjB,MAAAA,SAAS,CAACe,KAAD,CAAT,CAAiBG,SAAjB,CAA2B1C,IAA3B,IAAmCwC,aAAa,CAACP,MAAd,CAAqB,WAArB,EAAkCL,CAAC,CAACc,SAApC,CAAnC;AACAlB,MAAAA,SAAS,CAACe,KAAD,CAAT,CAAiBI,QAAjB,CAA0B3C,IAA1B,IAAkCwC,aAAa,CAACP,MAAd,CAAqB,UAArB,EAAiCL,CAAC,CAACe,QAAnC,CAAlC;AACAH,MAAAA,aAAa,CAACP,MAAd,CAAqB,OAArB,EAA8BE,MAAM,CAACjD,KAAK,CAAC0B,MAAP,CAApC;AACA1B,MAAAA,KAAK,CAAC0D,cAAN,CAAqBJ,aAArB,EAAqCtD,KAAK,CAACwC,SAAN,CAAgBa,KAAhB,EAAuBH,EAAxB,GAA8B,CAAlE;AACH,KAbD;AAgBH,GAlCD;;AAqCA,QAAMS,UAAU,GAAIC,aAAD,IAAwB;AACvCxC,IAAAA,wBAAwB,CAACwC,aAAa,CAAChD,GAAd,CAAmBiD,IAAD,IAAeC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB;AAC1EG,MAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,IAApB;AADiE,KAApB,CAAjC,CAAD,CAAxB;AAGArC,IAAAA,aAAa,CAACoC,aAAa,CAAChD,GAAd,CAAmBiD,IAAD,IAAeI,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAjC,CAAD,CAAb;AACH,GALD;;AAYA,QAAMM,MAAM,GAAInE,KAAD,IAAuB;AAClC,UAAMqD,KAAK,GAAGrD,KAAK,CAACqD,KAApB;AACA,UAAMQ,IAAI,GAAGvB,SAAS,CAACe,KAAD,CAAtB;AACA,wBACI;AAAK,MAAA,SAAS,EAAE3D,CAAC,CAACsE,OAAlB;AAA2B,MAAA,GAAG,EAAEH,IAAI,CAAC/C,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAEpB,CAAC,CAAC0E,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,GAAG,EAAC,WADR;AAEI,MAAA,GAAG,EAAE,CAACP,IAAI,CAACL,SAAL,CAAeQ,OAAf,GAAyBH,IAAI,CAACL,SAAL,CAAeQ,OAAxC,GAAkDH,IAAI,CAACL,SAAxD,KAAsE5D,gBAF/E;AAGI,MAAA,KAAK,EAAES,GAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAUH,GAbD;;AAgBA,QAAMgE,WAAW,GAAIT,aAAD,IAAwB;AACxC;AACAtC,IAAAA,cAAc,CAACsC,aAAa,CAAChD,GAAd,CAAmBiD,IAAD,IAAeC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB;AAChEG,MAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,IAApB;AADuD,KAApB,CAAjC,CAAD,CAAd;AAGH,GALD;;AAOA,QAAMS,cAAc,GAAItE,KAAD,IAA+B;AAElD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQA,KAAK,CAACe,KAAd,CADJ,eAEI;AAAS,MAAA,SAAS,EAAErB,CAAC,CAAC6E,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,QAAD;AAAW,MAAA,MAAM,EAAEvE,KAAK,CAACwE,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAACC,MAAAA,YAAD;AAAeC,MAAAA;AAAf,KAAD,kBACG,6CAAUD,YAAY,CAAC;AAACE,MAAAA,SAAS,EAAE;AAAZ,KAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEI,+CAAWD,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,eAGI;AAAK,MAAA,SAAS,EAAEhF,CAAC,CAACkF,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI5E,KAAK,CAAC6E,CAAV,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK7E,KAAK,CAAC8E,EAAX,CALJ,EAOK,CAAC,CAAC9E,KAAK,CAAC+E,WAAR,iBAAwB;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAP7B,CAFR,CAFJ,CAFJ,CADJ;AAuBH,GAzBD;;AA2BA,QAAMC,wBAAwB,GAAG,CAACtC,CAAD,EAAmCW,KAAnC,KAAqD;AAClF;AACA,UAAM;AAACvC,MAAAA,IAAD;AAAOX,MAAAA;AAAP,QAAgBuC,CAAtB;AACA,UAAMuC,IAAI,GAAG,CAAC,GAAGhD,OAAJ,CAAb;AACAgD,IAAAA,IAAI,CAAC5B,KAAD,CAAJ,CAAYvC,IAAZ,IAAoBX,KAApB;AACA+B,IAAAA,UAAU,CAAC+C,IAAD,CAAV;AACH,GAND;;AASA,QAAMC,qBAAqB,GAAG,CAACxC,CAAD,EAA6CW,KAA7C,KAA+D;AACzF,UAAM;AAACvC,MAAAA,IAAD;AAAOX,MAAAA;AAAP,QAAgBuC,CAAC,CAACyC,MAAxB;AACA,UAAMF,IAAI,GAAG,CAAC,GAAG3C,SAAJ,CAAb;AACA2C,IAAAA,IAAI,CAAC5B,KAAD,CAAJ,CAAYvC,IAAZ,IAAoBX,KAApB;AACAoC,IAAAA,WAAW,CAAC0C,IAAD,CAAX;AACH,GALD;;AAQA,QAAMG,gCAAgC,GAAG,CAACC,YAAD,EAA2BhC,KAA3B,KAA4C;AACjF,UAAM;AAACW,MAAAA;AAAD,QAAYF,MAAM,CAACC,MAAP,CAAcsB,YAAY,CAAC,CAAD,CAA1B,EAA+B;AAACrB,MAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBmB,YAAY,CAAC,CAAD,CAAhC;AAAV,KAA/B,CAAlB;AACA,UAAMJ,IAAI,GAAG,CAAC,GAAG3C,SAAJ,CAAb;AACA2C,IAAAA,IAAI,CAAC5B,KAAD,CAAJ,CAAY,WAAZ,IAA2BgC,YAAY,CAAC,CAAD,CAAvC;AACAJ,IAAAA,IAAI,CAAC5B,KAAD,CAAJ,CAAY,SAAZ,IAAyBW,OAAzB;AAEAzB,IAAAA,WAAW,CAAC0C,IAAD,CAAX;AACH,GAPD;;AASA,QAAMK,2BAA2B,GAAG,CAAC1B,aAAD,EAA4BP,KAA5B,KAA0C;AAC1E;AACA,UAAM4B,IAAI,GAAG,CAAC,GAAG3C,SAAJ,CAAb;AACA2C,IAAAA,IAAI,CAAC5B,KAAD,CAAJ,CAAY,UAAZ,IAA0BO,aAAa,CAAC,CAAD,CAAvC;AAGArB,IAAAA,WAAW,CAAC0C,IAAD,CAAX;AACH,GAPD;;AAUA,QAAMM,iBAAiB,GAAIlC,KAAD,IAAmB;AACzC,UAAM4B,IAAI,GAAG,CAAC,GAAGhD,OAAJ,CAAb;AACAgD,IAAAA,IAAI,CAACO,MAAL,CAAYnC,KAAZ,EAAmB,CAAnB;AACAnB,IAAAA,UAAU,CAAC+C,IAAD,CAAV;AACH,GAJD;;AAMA,QAAMQ,kBAAkB,GAAIpC,KAAD,IAAmB;AAC1CvD,IAAAA,UAAU,CAAC4F,eAAX,CAA4BpD,SAAS,CAACe,KAAD,CAAT,CAAiBH,EAAlB,GAAwB,CAAnD;AACA,UAAM+B,IAAI,GAAG,CAAC,GAAG3C,SAAJ,CAAb;AACA2C,IAAAA,IAAI,CAACO,MAAL,CAAYnC,KAAZ,EAAmB,CAAnB;AACAd,IAAAA,WAAW,CAAC0C,IAAD,CAAX;AACH,GALD;;AAOA,QAAMU,cAAc,GAAG,MAAM;AACzBzD,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAa;AAACsB,MAAAA,KAAK,EAAE,EAAR;AAAYqC,MAAAA,IAAI,EAAE,EAAlB;AAAsBC,MAAAA,IAAI,EAAE;AAA5B,KAAb,CAAD,CAAV;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC1B9F,IAAAA,KAAK,CAAC+F,YAAN,CAAmB/F,KAAK,CAAC0B,MAAzB;AACAa,IAAAA,WAAW,CAAC,CAAC,GAAGD,SAAJ,EAAe;AAACiB,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,SAAS,EAAE,EAAvB;AAA2BC,MAAAA,QAAQ,EAAE;AAArC,KAAf,CAAD,CAAX;AAGH,GALD;;AAQA,sBACI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEhB,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAS,IAAA,KAAK,EACV;AAACuD,MAAAA,eAAe,EAAG,4EAA2EzE,UAAU,IAAI5B,YAAa;AAAzH,KADJ;AAES,IAAA,SAAS,EAAED,CAAC,CAACuG,GAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEtC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAACc,IAAAA,YAAD;AAAeC,IAAAA;AAAf,GAAD,kBACG,6CAASD,YAAY,CAAC;AAACE,IAAAA,SAAS,EAAE;AAAZ,GAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI;AAAK,IAAA,SAAS,EAAEjF,CAAC,CAACwG,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,+CAAWxB,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAEI;AAAK,IAAA,SAAS,EAAEhF,CAAC,CAACkF,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJJ,eAKI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CADJ,CAFR,CAHJ,CADJ,eAqBI;AAAK,IAAA,EAAE,EAAElF,CAAC,CAACyG,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEzG,CAAC,CAAC0G,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,aAAnB;AAAiC,IAAA,KAAK,EAAEzE,WAAxC;AACW,IAAA,QAAQ,EAAGe,CAAD,IAAsCd,cAAc,CAACc,CAAC,CAACyC,MAAF,CAAShF,KAAV,CADzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI;AAAK,IAAA,SAAS,EAAET,CAAC,CAAC2G,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE3F,OAAjB;AAA0B,IAAA,YAAY,EAAE;AAACK,MAAAA,KAAK,EAAEc,OAAR;AAAiB1B,MAAAA,KAAK,EAAE0B;AAAxB,KAAxC;AACQ,IAAA,WAAW,EAAE,qBADrB;AAC4C,IAAA,QAAQ,EAAGa,CAAD,IAAYZ,UAAU,CAACY,CAAD,CAD5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAHJ,CADJ,eAUI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,oBAAnB;AAAwC,IAAA,KAAK,EAAEX,kBAA/C;AACW,IAAA,QAAQ,EAAGW,CAAD,IAAsCV,qBAAqB,CAACU,CAAC,CAACyC,MAAF,CAAShF,KAAV,CADhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAYI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,cAAtB;AAAqC,IAAA,WAAW,EAAE,CAAlD;AAAqD,IAAA,MAAM,EAAEkE,WAA7D;AACgB,IAAA,CAAC,EAAC,iCADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAeKpC,OAAO,CAACrB,GAAR,CAAY,CAAC0F,CAAD,EAA8CC,CAA9C,KAA4D;AACrE,wBACI;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAK,MAAA,SAAS,EAAE7G,CAAC,CAAC0G,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,EAAE,EAAE1G,CAAC,CAACO,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,WAAW,EAAC,OAA5C;AAAoD,MAAA,IAAI,EAAC,OAAzD;AAAiE,MAAA,KAAK,EAAEqG,CAAC,CAAC/C,KAA1E;AACO,MAAA,QAAQ,EAAEb,CAAC,IAAIsC,wBAAwB,CAACtC,CAAC,CAACyC,MAAH,EAAWoB,CAAX,CAD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAMI;AAAK,MAAA,EAAE,EAAE7G,CAAC,CAACO,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEe,eAAjB;AAAkC,MAAA,YAAY,EAAE;AAACD,QAAAA,KAAK,EAAEuF,CAAC,CAACV,IAAV;AAAgBzF,QAAAA,KAAK,EAAEmG,CAAC,CAACV;AAAzB,OAAhD;AACQ,MAAA,WAAW,EAAC,MADpB;AAC2B,MAAA,QAAQ,EAAGlD,CAAD,IAAYsC,wBAAwB,CAAC;AACtElE,QAAAA,IAAI,EAAE,MADgE;AAEtEX,QAAAA,KAAK,EAAEuC,CAAC,CAACvC;AAF6D,OAAD,EAGtEoG,CAHsE,CADzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CANJ,CAFJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAkBI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,WAAW,EAAC,MAA5C;AAAmD,MAAA,IAAI,EAAC,MAAxD;AAA+D,MAAA,KAAK,EAAED,CAAC,CAACT,IAAxE;AACO,MAAA,QAAQ,EAAEnD,CAAC,IAAIsC,wBAAwB,CAACtC,CAAC,CAACyC,MAAH,EAAWoB,CAAX,CAD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKtE,OAAO,CAACuE,MAAR,KAAmB,CAAnB,iBACD;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,OAAO,EAAE,MAAMjB,iBAAiB,CAACgB,CAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGKtE,OAAO,CAACuE,MAAR,GAAiB,CAAjB,KAAuBD,CAAvB,iBAA4B;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,OAAO,EAAE,MAAM;AACrEZ,QAAAA,cAAc;AACjB,OAF4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHjC,CApBJ,CADJ;AA8BH,GA/BA,CAfL,EAiDKrD,SAAS,CAAC1B,GAAV,CAAc,CAAC6F,CAAD,EAAqBF,CAArB,KAAmC;AAC9C,wBACI;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,WAAW,EAAC,OAA5C;AAAoD,MAAA,IAAI,EAAC,OAAzD;AAAiE,MAAA,KAAK,EAAEE,CAAC,CAAClD,KAA1E;AACO,MAAA,QAAQ,EAAEb,CAAC,IAAIwC,qBAAqB,CAACxC,CAAD,EAAI6D,CAAJ,CAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAMI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAEvG,KAAK,CAACwC,SAAzB;AAAoC,MAAA,MAAM,EAAExC,KAAK,CAAC0B,MAAlD;AAA0D,MAAA,KAAK,EAAE6E,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAQI,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,WAArB;AAAiC,MAAA,KAAK,EAAC,WAAvC;AAAmD,MAAA,WAAW,EAAE,CAAhE;AACgB,MAAA,MAAM,EAAG3C,aAAD,IAAwBwB,gCAAgC,CAACxB,aAAD,EAAgB2C,CAAhB,CADhF;AAEgB,MAAA,CAAC,EAAC,iCAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,eAWI,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,UAArB;AAAgC,MAAA,KAAK,EAAC,UAAtC;AAAiD,MAAA,WAAW,EAAE,CAA9D;AACgB,MAAA,MAAM,EAAG3C,aAAD,IAAwB0B,2BAA2B,CAAC1B,aAAD,EAAgB2C,CAAhB,CAD3E;AAEgB,MAAA,CAAC,EAAC,iCAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKjE,SAAS,CAACkE,MAAV,KAAqB,CAArB,iBACD;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,OAAO,EAAE,MAAMf,kBAAkB,CAACc,CAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGKjE,SAAS,CAACkE,MAAV,GAAmB,CAAnB,KAAyBD,CAAzB,iBAA8B;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,OAAO,EAAE,MAAM;AACvET,QAAAA,eAAe;AAClB,OAF8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHnC,CAdJ,CADJ;AAwBH,GAzBA,CAjDL,eA2EI;AAAQ,IAAA,SAAS,EAAEpG,CAAC,CAACgH,MAArB;AAA6B,IAAA,IAAI,EAAE,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA3EJ,CArBJ,CADJ;AAqGH,CAvRM","sourcesContent":["import React, {ChangeEvent, FormEvent, useState} from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport s from './ProfileEdit.module.css'\nimport defaultImage from '../../../../media/default.jpg'\nimport defaultThumbnail from '../../../../media/thumbnail.jpg'\nimport Select from 'react-select'\nimport {CustomDropZoneType} from \"./Document\";\nimport {profileAPI} from \"../../../../api/profileApi\";\n\ntype InputProps = {\n    element: string,\n    value: any,\n    onChange: any\n}\n\nlet InputText = (props: InputProps) => {\n    return (<div id={s.doubleInput}><label>{props.element}</label>\n            <input className='form-control' type=\"text\" placeholder={props.element} id={props.element}\n                   value={props.value} onChange={props.onChange}/>\n        </div>\n    )\n}\n\nconst img = {\n    display: 'block',\n    width: 'auto',\n    height: '100%'\n\n};\n\ntype RootPropsType = {\n    countries: Array<any>\n    category: Array<{\n        id: number,\n        Name: string\n    }>,\n    postDocument: (userID: number) => void\n    previousProfile: Array<{\n        id: number,\n        companyProfilePicture: string,\n        companyName: string,\n        companyDescription: string,\n        country: string,\n        companyLogo: string,\n        sections: string,\n        owner: number\n    }>,\n    userID: number,\n    documents: Array<{\n        id: number,\n        Title: string,\n        Thumbnail: string,\n        Download: string,\n        owner: number\n    }>,\n    updateManufacturer: (form_data: any, id: number) => void,\n    updateDocument: (form_doc_data: any, id: number) => void\n\n}\n\nexport const ProfileEdit = (props: RootPropsType) => {\n    const options = props.countries.map(c => {\n        return {value: c.name, label: c.name}\n    })\n    const categoryOptions = props.category.map(c => {\n        return {value: c.Name, label: c.Name}\n    })\n\n    const [companyProfilePicture, setCompanyProfilePicture] = useState<any>();\n    const [companyLogo, setCompanyLogo] = useState<Array<any>>();\n    const [background, setBackground] = useState<string| Array<any>>(props.previousProfile[(props.userID) - 1].companyProfilePicture)\n    const [companyName, setCompanyName] = useState<string>(props.previousProfile[(props.userID) - 1].companyName)\n    const [country, setCountry] = useState<string | {value: string, label: string}>(props.previousProfile[(props.userID) - 1].country)\n    const [companyDescription, setCompanyDescription] = useState<string>(props.previousProfile[(props.userID) - 1].companyDescription)\n    const [section, setSection] = useState<any>(JSON.parse(props.previousProfile[(props.userID) - 1].sections));\n    const [Documents, setDocument] = useState<any>(props.documents);\n\n\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        debugger\n        let form_data = new FormData();\n        companyProfilePicture !== undefined && (form_data.append('companyProfilePicture', companyProfilePicture[0], companyProfilePicture[0].name))\n        companyLogo !== undefined && (form_data.append('companyLogo', companyLogo[0], companyLogo[0].name));\n        form_data.append(\"sections\", JSON.stringify(section))\n        form_data.append('companyName', companyName);\n        form_data.append('companyDescription', companyDescription);\n        if (typeof country !== \"string\") {\n            form_data.append('country', country.value);\n        }else {\n            form_data.append('country', country);\n        }\n        form_data.append('owner', String(props.userID));\n        const id = props.userID\n        props.updateManufacturer(form_data, id)\n\n        Documents.forEach((e: {\n        id: number,\n        Title: string,\n        Thumbnail: string,\n        Download: string,\n        owner: number\n    }, index: number) => {\n            let form_doc_data = new FormData();\n            form_doc_data.append('Title', e.Title);\n            Documents[index].Thumbnail.name && form_doc_data.append('Thumbnail', e.Thumbnail);\n            Documents[index].Download.name && form_doc_data.append(\"Download\", e.Download)\n            form_doc_data.append('owner', String(props.userID));\n            props.updateDocument(form_doc_data, (props.documents[index].id) - 1)\n        })\n\n\n    }\n\n\n    const handleDrop = (acceptedFiles: any) => {\n        setCompanyProfilePicture(acceptedFiles.map((file: any) => Object.assign(file, {\n            preview: URL.createObjectURL(file)\n        })));\n        setBackground(acceptedFiles.map((file: any) => URL.createObjectURL(file)))\n    }\n    type ThumbsType = {\n        index: number,\n        documents: any,\n        userID: number\n\n    }\n    const Thumbs = (props: ThumbsType) => {\n        const index = props.index\n        const file = Documents[index]\n        return (\n            <div className={s.preview} key={file.name}>\n                <div className={s.thumbInner}>\n                    <img\n                        alt=\"thumbnail\"\n                        src={(file.Thumbnail.preview ? file.Thumbnail.preview : file.Thumbnail) || defaultThumbnail}\n                        style={img}\n                    />\n                </div>\n            </div>)\n    }\n\n\n    const handleDrop4 = (acceptedFiles: any) => {\n        debugger\n        setCompanyLogo(acceptedFiles.map((file: any) => Object.assign(file, {\n            preview: URL.createObjectURL(file)\n        })));\n    }\n\n    const CustomDropZone = (props: CustomDropZoneType) => {\n\n        return (\n            <div>\n                <label>{props.label}</label>\n                <section className={s.thumb}>\n\n                    <Dropzone  onDrop={props.onDrop}>\n                        {({getRootProps, getInputProps}) => (\n                            <div  {...getRootProps({className: \"dropzone\"})}>\n\n                                <input {...getInputProps()} />\n                                <div className={s.clip}/>\n                                <p>{props.p}</p>\n                                <h5>{props.h5}</h5>\n\n                                {!!props.AllowButton && (<button type=\"button\">\n                                    Upload\n                                </button>)}\n                            </div>\n                        )}\n                    </Dropzone>\n                </section>\n            </div>\n        )\n    }\n\n    const SectionhandleInputChange = (e: {name: string, value: string}, index: number) => {\n        debugger\n        const {name, value} = e;\n        const list = [...section];\n        list[index][name] = value;\n        setSection(list);\n    };\n\n\n    const DocumentedInputChange = (e: {target: {name: string, value: string}}, index: number) => {\n        const {name, value} = e.target;\n        const list = [...Documents];\n        list[index][name] = value;\n        setDocument(list);\n    };\n\n\n    const DocumenthandleInputFileThumbnail = (aceptedFiles: Array<any>, index:number) => {\n        const {preview} = Object.assign(aceptedFiles[0], {preview: URL.createObjectURL(aceptedFiles[0])});\n        const list = [...Documents];\n        list[index]['Thumbnail'] = aceptedFiles[0];\n        list[index]['preview'] = preview;\n\n        setDocument(list);\n    }\n\n    const DocumenthandleInputDownload = (acceptedFiles: Array<any>, index:any) => {\n        debugger\n        const list = [...Documents];\n        list[index]['Download'] = acceptedFiles[0];\n\n\n        setDocument(list);\n    }\n\n\n    const handleRemoveClick = (index: number) => {\n        const list = [...section];\n        list.splice(index, 1);\n        setSection(list);\n    };\n\n    const handleRemoveClick2 = (index: number) => {\n        profileAPI.DeleteDocuments((Documents[index].id) - 1)\n        const list = [...Documents];\n        list.splice(index, 1);\n        setDocument(list);\n    };\n\n    const handleAddClick = () => {\n        setSection([...section, {Title: \"\", Icon: \"\", Text: \"\"}]);\n    };\n\n    const handleAddClick2 = () => {\n        props.postDocument(props.userID)\n        setDocument([...Documents, {Title: \"\", Thumbnail: \"\", Download: \"\"}])\n\n\n    };\n\n\n    return (\n        <form className=\"form-group\" onSubmit={handleSubmit}>\n            <section style={\n                {backgroundImage: `linear-gradient( rgba(56, 56, 56, 0.596), rgba(56, 56, 56, 0.596) ), url(${background || defaultImage})`}}\n                     className={s.pic}>\n                <Dropzone onDrop={handleDrop}>\n                    {({getRootProps, getInputProps}) => (\n                        <div {...getRootProps({className: \"dropzone\"})}>\n                            <div className={s.compamyPictureform}>\n                                <input {...getInputProps()} />\n                                <div className={s.clip}/>\n                                <p>Drag & Drop your company picture here</p>\n                                <h5>Company Profile Picture</h5>\n                                <button type=\"button\">\n                                    Upload\n                                </button>\n                            </div>\n                        </div>\n\n                    )}\n                </Dropzone>\n            </section>\n            <div id={s.main}>\n                <div className={s.double}>\n                    <InputText element=\"companyName\" value={companyName}\n                               onChange={(e: ChangeEvent<HTMLInputElement>) => setCompanyName(e.target.value)}/>\n                    <div className={s.select}>\n                        <label>Country</label>\n                        <Select options={options} defaultValue={{label: country, value: country}}\n                                placeholder={\"Choose your country\"} onChange={(e: any) => setCountry(e)}/>\n                    </div>\n                </div>\n                <InputText element=\"companyDescription\" value={companyDescription}\n                           onChange={(e: ChangeEvent<HTMLInputElement>) => setCompanyDescription(e.target.value)}/>\n                <CustomDropZone label=\"Company Logo\" AllowButton={1} onDrop={handleDrop4}\n                                p=\"Drag&Drop Your attachments here\"/>\n\n                {section.map((x: {Icon: any, Title: string, Text: string}, i: number) => {\n                    return (\n                        <div key={i}>\n                            <h2>Section</h2>\n                            <div className={s.double}>\n                                <div id={s.doubleInput}>\n                                    <label>Title</label>\n                                    <input className='form-control' placeholder=\"Title\" name=\"Title\" value={x.Title}\n                                           onChange={e => SectionhandleInputChange(e.target, i)}/>\n                                </div>\n                                <div id={s.doubleInput}>\n                                    <label>Icon</label>\n                                    <Select options={categoryOptions} defaultValue={{label: x.Icon, value: x.Icon}}\n                                            placeholder=\"Icon\" onChange={(e: any) => SectionhandleInputChange({\n                                        name: \"Icon\",\n                                        value: e.value\n                                    }, i)}/>\n                                </div>\n                            </div>\n                            <label>Text</label>\n                            <input className='form-control' placeholder=\"Text\" name=\"Text\" value={x.Text}\n                                   onChange={e => SectionhandleInputChange(e.target, i)}/>\n                            <div>\n                                {section.length !== 1 &&\n                                <div className=\"text-danger\" onClick={() => handleRemoveClick(i)}>Remove</div>}\n                                {section.length - 1 === i && <div className=\"text-danger\" onClick={() => {\n                                    handleAddClick()\n                                }}>Add 1 Section</div>}\n                            </div>\n                        </div>\n                    )\n                })}\n\n\n                {Documents.map((y: {Title: string}, i: number) => {\n                    return (\n                        <div key={i}>\n                            <h2>Document</h2>\n                            <label>Title</label>\n                            <input className='form-control' placeholder=\"Title\" name=\"Title\" value={y.Title}\n                                   onChange={e => DocumentedInputChange(e, i)}/>\n\n                            <Thumbs documents={props.documents} userID={props.userID} index={i}/>\n\n                            <CustomDropZone name=\"Thumbnail\" label=\"Thumbnail\" AllowButton={0}\n                                            onDrop={(acceptedFiles: any) => DocumenthandleInputFileThumbnail(acceptedFiles, i)}\n                                            p=\"Drag&Drop Your attachments here\"/>\n                            <CustomDropZone name=\"Download\" label=\"Download\" AllowButton={1}\n                                            onDrop={(acceptedFiles: any) => DocumenthandleInputDownload(acceptedFiles, i)}\n                                            p=\"Drag&Drop Your attachments here\"/>\n                            <div>\n                                {Documents.length !== 1 &&\n                                <div className=\"text-danger\" onClick={() => handleRemoveClick2(i)}>Remove</div>}\n                                {Documents.length - 1 === i && <div className=\"text-danger\" onClick={() => {\n                                    handleAddClick2()\n                                }}>Add 1 Document</div>}\n                            </div>\n                        </div>\n                    )\n                })}\n                <button className={s.button} type={\"submit\"}>Send Form</button>\n            </div>\n        </form>\n    )\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}