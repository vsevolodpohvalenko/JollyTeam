{"ast":null,"code":"var _jsxFileName = \"/home/seva/Desktop/textilespot-master/frontend/src/component/FAQ.tsx\";\nimport React from 'react';\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from 'react-apollo';\nimport s from \"./FAQ/FAQ.module.css\";\nimport cn from \"classnames\";\nimport Preloader from \"./Preloader/preloader\";\nconst Query_Groups = gql`\n  query {\n    FAQGroups {\n        Title,\n        id\n    }\n}`;\nconst Query_Item = gql`\n  query {\n    FAQItems{\n        Title\n        Group{\n        id\n        Title\n      }\n        Answer\n        Active\n        id\n}\n}`;\nconst Update_Item = gql`\nmutation updateItem($Title: String $Group: ID $Active: Boolean $Answer: String){\n  updateItem(id: $id ,input:{\n    Title: $Title,\n    Group: $Group,\n    Answer: $Answer,\n    Active: $Active\n  }){\n    item{\n      Title\n      Group{\n        id\n        Title\n      }\n      Answer\n      Active\n      id\n    }\n  }\n}\n`;\n\nconst OnClick = item => {\n  debugger;\n  const [updateItem, {\n    data\n  }] = useMutation(Update_Item);\n  const id = Number(item.id);\n  const input = {\n    Title: item.Title,\n    Group: Number(item.Group.id),\n    Answer: item.Answer,\n    Active: !item.Active\n  };\n  updateItem({\n    variables: {\n      id: id,\n      input: input\n    }\n  });\n};\n\nexport const FrequentlyAskedQuestions = () => {\n  const {\n    data,\n    loading\n  } = useQuery(Query_Groups, {\n    pollInterval: 500 // refetch the result every 0.5 second\n\n  });\n\n  const SuitableItems = props => {\n    const {\n      data,\n      loading\n    } = useQuery(Query_Item, {\n      pollInterval: 500 // refetch the result every 0.5 second\n\n    });\n    debugger;\n    if (loading) return /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }); // if (!data.items.edges.node) return <Preloader/>\n\n    const suitableItems = data.FAQItems.filter(i => Number(i.Group.id) === Number(props.Id));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: props.Id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, suitableItems.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: [s.item, \"d-flex justify-content-between d-flex align-items-center\"].join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 116\n      }\n    }, item.Title), /*#__PURE__*/React.createElement(\"div\", {\n      className: cn({\n        [s.active]: item.Active\n      }, s.menu_toogle),\n      onClick: () => OnClick(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: cn({\n        [s.active]: item.Active\n      }, s.group, s.dropdown),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, item.Answer))));\n  };\n\n  if (loading) return /*#__PURE__*/React.createElement(Preloader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"container text-center mt-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"FAQ\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"middle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"In a professional context it often happens that private or corporate\"), data.FAQGroups.map(group => /*#__PURE__*/React.createElement(\"div\", {\n    key: group.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row border-bottom ml-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: s.group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 66\n    }\n  }, group.Title)), /*#__PURE__*/React.createElement(SuitableItems, {\n    Id: group.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }))));\n};","map":{"version":3,"sources":["/home/seva/Desktop/textilespot-master/frontend/src/component/FAQ.tsx"],"names":["React","gql","useQuery","useMutation","s","cn","Preloader","Query_Groups","Query_Item","Update_Item","OnClick","item","updateItem","data","id","Number","input","Title","Group","Answer","Active","variables","FrequentlyAskedQuestions","loading","pollInterval","SuitableItems","props","suitableItems","FAQItems","filter","i","Id","map","join","active","menu_toogle","group","dropdown","main","FAQGroups"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {gql} from \"apollo-boost\";\nimport {useQuery, useMutation} from 'react-apollo';\nimport s from \"./FAQ/FAQ.module.css\";\nimport cn from \"classnames\";\nimport Preloader from \"./Preloader/preloader\";\nimport {returnErrors} from \"../redux/reducers/ErrorsReducer\";\nimport {initialStateType} from \"../redux/reducers/ProfileReducer\";\n\nconst Query_Groups = gql`\n  query {\n    FAQGroups {\n        Title,\n        id\n    }\n}`;\n\nconst Query_Item = gql`\n  query {\n    FAQItems{\n        Title\n        Group{\n        id\n        Title\n      }\n        Answer\n        Active\n        id\n}\n}`;\n\nconst Update_Item = gql`\nmutation updateItem($Title: String $Group: ID $Active: Boolean $Answer: String){\n  updateItem(id: $id ,input:{\n    Title: $Title,\n    Group: $Group,\n    Answer: $Answer,\n    Active: $Active\n  }){\n    item{\n      Title\n      Group{\n        id\n        Title\n      }\n      Answer\n      Active\n      id\n    }\n  }\n}\n`;\n\n    const OnClick = (item: {\n        id: number,\n        Title: string,\n        Answer: string,\n        Active: boolean,\n        Group: { id: number, Title: string }\n    }) => {\n        debugger\n        const [updateItem, {data}] = useMutation(Update_Item);\n        const id = Number(item.id)\n        const input = {\n            Title: item.Title,\n            Group: Number(item.Group.id),\n            Answer: item.Answer,\n            Active: !item.Active\n        }\n        updateItem({\n            variables: {\n                id: id,\n                input: input\n            }\n        });\n    }\n\nexport const FrequentlyAskedQuestions = () => {\n\n    const {data, loading}: any = useQuery(\n        Query_Groups, {\n            pollInterval: 500 // refetch the result every 0.5 second\n        }\n    );\n\n    const SuitableItems = (props: any) => {\n        const {data, loading}: any = useQuery(\n            Query_Item, {\n                pollInterval: 500 // refetch the result every 0.5 second\n            }\n        );\n        debugger\n        if (loading) return <Preloader/>;\n        // if (!data.items.edges.node) return <Preloader/>\n        const suitableItems = data.FAQItems.filter((i: any) => Number(i.Group.id) === Number(props.Id))\n        return (\n            <div key={props.Id}>\n                {suitableItems.map((item: any) => <div key={item.id}>\n                    <h6 className={[s.item, \"d-flex justify-content-between d-flex align-items-center\"].join(' ')}><span\n                        className=\"text-danger\">{item.Title}</span>\n                        <div\n                            className={cn({[s.active]: item.Active}, s.menu_toogle)}\n                            onClick={() => OnClick(item)}\n                        >\n                        </div>\n                    </h6>\n                    <p className={cn({[s.active]: item.Active}, s.group, s.dropdown)}>{item.Answer}</p>\n                </div>)}\n            </div>\n        )\n    }\n\n    if (loading) return <Preloader/>;\n    return (\n        <div className={s.main}>\n            <h3 className=\"container text-center mt-3 mb-3\">FAQ</h3>\n            <p className=\"middle text-center\">In a professional context it often happens that private or\n                corporate</p>\n            {data.FAQGroups.map((group: any) =>\n                <div key={group.id}>\n                    <div className=\"row border-bottom ml-3 mb-3\"><h5 className={s.group}>{group.Title}</h5></div>\n                    <SuitableItems Id={group.id}/>\n                </div>)}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}