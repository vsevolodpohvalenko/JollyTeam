{"ast":null,"code":"import { authAPI } from \"../../api\";\nlet initialState = {\n  groups: [],\n  items: [],\n  active_item: null\n};\nexport const FAQReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_FAQ_GROUPS:\n      return { ...state,\n        groups: action.payload\n      };\n\n    case ACTIVE_ITEM:\n      return { ...state,\n        active_item: action.payload\n      };\n\n    case GET_FAQ_ITEM:\n      return { ...state,\n        items: action.payload\n      };\n\n    case MAKE_ACTIVE:\n      return { ...state,\n        active_item: { ...state.active_item,\n          Active: !state.active_item.Active\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst getFaqGroupsSuccess = payload => ({\n  type: GET_FAQ_GROUPS,\n  payload\n});\n\nconst getFaqItemsSuccess = payload => ({\n  type: GET_FAQ_ITEM,\n  payload\n});\n\nconst activeIdSuccess = item => ({\n  type: ACTIVE_ITEM,\n  payload: item\n});\n\nexport const getFaqGroups = () => async dispatch => {\n  let response = await faqAPI.getFaq_Group();\n  dispatch(getFaqGroupsSuccess(response.data));\n};\nexport const ActiveId = item => async dispatch => {\n  debugger;\n  dispatch(activeIdSuccess(item));\n  dispatch({\n    type: MAKE_ACTIVE\n  });\n};\nexport const getFaqItems = () => async dispatch => {\n  let response = await faqAPI.getFaq_Item();\n  dispatch(getFaqItemsSuccess(response.data));\n};","map":{"version":3,"sources":["/home/vsevolod/Desktop/TextileSpot. REACT/textilespot./src/redux/reducers/AuthReducer.jsx"],"names":["authAPI","initialState","groups","items","active_item","FAQReducer","state","action","type","GET_FAQ_GROUPS","payload","ACTIVE_ITEM","GET_FAQ_ITEM","MAKE_ACTIVE","Active","getFaqGroupsSuccess","getFaqItemsSuccess","activeIdSuccess","item","getFaqGroups","dispatch","response","faqAPI","getFaq_Group","data","ActiveId","getFaqItems","getFaq_Item"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,WAAtB;AAGA,IAAIC,YAAY,GAAE;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,WAAW,EAAE;AAHI,CAAlB;AAMA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAK,GAACL,YAAP,EAAqBM,MAArB,KAA+B;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,cAAL;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAWJ,QAAAA,MAAM,EAAEK,MAAM,CAACG;AAA1B,OAAP;;AACJ,SAAKC,WAAL;AACI,aAAO,EAAC,GAAGL,KAAJ;AAAWF,QAAAA,WAAW,EAAEG,MAAM,CAACG;AAA/B,OAAP;;AACJ,SAAKE,YAAL;AACI,aAAO,EAAC,GAAGN,KAAJ;AAAWH,QAAAA,KAAK,EAAEI,MAAM,CAACG;AAAzB,OAAP;;AACJ,SAAKG,WAAL;AACA,aAAO,EAAC,GAAGP,KAAJ;AAAWF,QAAAA,WAAW,EAAG,EAAC,GAAGE,KAAK,CAACF,WAAV;AAAuBU,UAAAA,MAAM,EAAE,CAACR,KAAK,CAACF,WAAN,CAAkBU;AAAlD;AAAzB,OAAP;;AACA;AACK,aAAOR,KAAP;AAVT;AAYH,CAbM;;AAeP,MAAMS,mBAAmB,GAAIL,OAAD,KAAc;AAACF,EAAAA,IAAI,EAAEC,cAAP;AAAuBC,EAAAA;AAAvB,CAAd,CAA5B;;AACA,MAAMM,kBAAkB,GAAIN,OAAD,KAAc;AAACF,EAAAA,IAAI,EAAEI,YAAP;AAAqBF,EAAAA;AAArB,CAAd,CAA3B;;AACA,MAAMO,eAAe,GAAIC,IAAD,KAAW;AAACV,EAAAA,IAAI,EAAEG,WAAP;AAAoBD,EAAAA,OAAO,EAACQ;AAA5B,CAAX,CAAxB;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAChD,MAAIC,QAAQ,GAAG,MAAMC,MAAM,CAACC,YAAP,EAArB;AACAH,EAAAA,QAAQ,CAACL,mBAAmB,CAACM,QAAQ,CAACG,IAAV,CAApB,CAAR;AACC,CAHE;AAIP,OAAO,MAAMC,QAAQ,GAAIP,IAAD,IAAU,MAAME,QAAN,IAAkB;AAChD;AACAA,EAAAA,QAAQ,CAACH,eAAe,CAACC,IAAD,CAAhB,CAAR;AACAE,EAAAA,QAAQ,CAAC;AAACZ,IAAAA,IAAI,EAAEK;AAAP,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMa,WAAW,GAAG,MAAM,MAAMN,QAAN,IAAkB;AAChD,MAAIC,QAAQ,GAAI,MAAMC,MAAM,CAACK,WAAP,EAAtB;AACCP,EAAAA,QAAQ,CAACJ,kBAAkB,CAACK,QAAQ,CAACG,IAAV,CAAnB,CAAR;AACH,CAHM","sourcesContent":["import {authAPI} from \"../../api\"\n\n\nlet initialState ={\n groups :[],\n items :[],\n active_item: null\n}\n\nexport const FAQReducer = (state=initialState, action) =>{\n    switch (action.type) {\n        case GET_FAQ_GROUPS:\n            return {...state, groups: action.payload}\n        case ACTIVE_ITEM:\n            return {...state, active_item: action.payload}\n        case GET_FAQ_ITEM:\n            return {...state, items: action.payload}\n        case MAKE_ACTIVE: \n        return {...state, active_item : {...state.active_item, Active: !state.active_item.Active}}\n        default:\n             return state\n    }\n}\n\nconst getFaqGroupsSuccess = (payload) => ({type: GET_FAQ_GROUPS, payload})\nconst getFaqItemsSuccess = (payload) => ({type: GET_FAQ_ITEM, payload})\nconst activeIdSuccess = (item) => ({type: ACTIVE_ITEM, payload:item})\n\nexport const getFaqGroups = () => async dispatch => {\n    let response = await faqAPI.getFaq_Group()\n    dispatch(getFaqGroupsSuccess(response.data))\n    }\nexport const ActiveId = (item) => async dispatch => {\n    debugger\n    dispatch(activeIdSuccess(item))\n    dispatch({type: MAKE_ACTIVE})\n}\n\nexport const getFaqItems = () => async dispatch => {\n   let response =  await faqAPI.getFaq_Item() \n    dispatch(getFaqItemsSuccess(response.data))\n}"]},"metadata":{},"sourceType":"module"}