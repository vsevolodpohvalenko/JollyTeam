{"ast":null,"code":"import * as axios from 'axios';\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nconst config2 = {\n  headers: {\n    'Content-Type': 'multipart/form-data'\n  }\n};\nconst instance = axios.create({\n  baseURL: 'http://127.0.0.1:8000/'\n});\nexport const faqAPI = {\n  getFaq_Group: () => {\n    return instance('api/faq_group/');\n  },\n  getFaq_Item: () => {\n    return instance.get('api/faq_item');\n  },\n  active_Item: item => {\n    return instance.put(`api/faq_item/${item.id}/`, {\n      Group: item.Group,\n      Title: item.Title,\n      Answer: item.Answer,\n      Active: item.Active\n    });\n  }\n};\nexport const authAPI = {\n  getUser: tokenConfig => {\n    return instance.get('auth/users/me/', tokenConfig);\n  },\n  login: body => {\n    return instance.post('auth/token/login', body, config);\n  },\n  logout: tokenConfig => {\n    return instance.post('auth/token/logout', \"\", tokenConfig);\n  },\n  register: body => {\n    return instance.post('auth/users/', body, config);\n  },\n  forgot_password: body => {\n    return instance.post('auth/users/reset_password/', body);\n  },\n  reset_password: body => {\n    return instance.post('auth/users/reset_password_confirm/', body);\n  },\n  activate: body => {\n    debugger;\n    return instance.post('auth/users/activation/', {\n      uid: body.uid,\n      token: body.token\n    });\n  }\n};\nexport const contentAPI = {\n  content: () => {\n    return instance.get('api/ContentPage/');\n  }\n};\nexport const contactAPI = {\n  PutContact: body => {\n    return instance.post('api/Contact/', body, config);\n  }\n};\nexport const profileAPI = {\n  PostProfile: id => {\n    debugger;\n    let form_data = new FormData();\n    form_data.append('owner', String(id));\n    return instance.post('api/manufacturerProfilePage/', form_data, config2);\n  },\n  PutProfile: (form_data, id) => {\n    debugger;\n    return instance.patch(`api/manufacturerProfilePage/${id}/`, form_data, config2);\n  },\n  PatchDocuments: (form_data, id) => {\n    return instance.patch(`api/Document/${id + 1}/`, form_data, config2);\n  },\n  PostDocuments: id => {\n    let form_data = new FormData();\n    form_data.append('owner', String(id));\n    return instance.post(`api/Document/`, form_data, config2);\n  },\n  DeleteDocuments: id => {\n    return instance.delete(`api/Document/${id + 1}`);\n  },\n  getCountries: () => {\n    return axios.get('http://restcountries.eu/rest/v2/all');\n  },\n  getProfile: () => {\n    return instance.get('api/manufacturerProfilePage');\n  },\n  getDocuments: () => {\n    debugger;\n    return instance.get('api/Document/');\n  },\n  getCategory: () => {\n    return instance.get(\"api/Category/\");\n  },\n  getSearcheddData: search => {\n    debugger;\n    return instance(`manufacturerProfilePage?search=${search}`);\n  }\n};\nexport const findPageAPI = {\n  findPage: search => {\n    debugger;\n    return instance.get(`links?search=${search}`);\n  }\n};","map":{"version":3,"sources":["/home/seva/Desktop/textilespot-master/frontend/src/api.js"],"names":["axios","config","headers","config2","instance","create","baseURL","faqAPI","getFaq_Group","getFaq_Item","get","active_Item","item","put","id","Group","Title","Answer","Active","authAPI","getUser","tokenConfig","login","body","post","logout","register","forgot_password","reset_password","activate","uid","token","contentAPI","content","contactAPI","PutContact","profileAPI","PostProfile","form_data","FormData","append","String","PutProfile","patch","PatchDocuments","PostDocuments","DeleteDocuments","delete","getCountries","getProfile","getDocuments","getCategory","getSearcheddData","search","findPageAPI","findPage"],"mappings":"AAAA,OAAO,KAAMA,KAAb,MAAwB,OAAxB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AADE,CAAf;AAMA,MAAMC,OAAO,GAAG;AAACD,EAAAA,OAAO,EAAE;AAAC,oBAAgB;AAAjB;AAAV,CAAhB;AAGA,MAAME,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE;AADiB,CAAb,CAAjB;AAMA,OAAO,MAAMC,MAAM,GAAG;AAClBC,EAAAA,YAAY,EAAE,MAAM;AAChB,WAAOJ,QAAQ,CAAC,gBAAD,CAAf;AACH,GAHiB;AAIlBK,EAAAA,WAAW,EAAE,MAAM;AACf,WAAOL,QAAQ,CAACM,GAAT,CAAa,cAAb,CAAP;AACH,GANiB;AAOlBC,EAAAA,WAAW,EAAGC,IAAD,IAAU;AACnB,WAAOR,QAAQ,CAACS,GAAT,CAAc,gBAAeD,IAAI,CAACE,EAAG,GAArC,EAAyC;AAC5CC,MAAAA,KAAK,EAAEH,IAAI,CAACG,KADgC;AAE5CC,MAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFgC;AAG5CC,MAAAA,MAAM,EAAEL,IAAI,CAACK,MAH+B;AAI5CC,MAAAA,MAAM,EAAEN,IAAI,CAACM;AAJ+B,KAAzC,CAAP;AAMH;AAdiB,CAAf;AAgBP,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,OAAO,EAAGC,WAAD,IAAiB;AAEtB,WAAOjB,QAAQ,CAACM,GAAT,CAAa,gBAAb,EAA+BW,WAA/B,CAAP;AACH,GAJkB;AAKnBC,EAAAA,KAAK,EAAGC,IAAD,IAAU;AAEb,WAAOnB,QAAQ,CAACoB,IAAT,CAAc,kBAAd,EAAkCD,IAAlC,EAAwCtB,MAAxC,CAAP;AACH,GARkB;AASnBwB,EAAAA,MAAM,EAAGJ,WAAD,IAAiB;AAErB,WAAOjB,QAAQ,CAACoB,IAAT,CAAc,mBAAd,EAAmC,EAAnC,EAAuCH,WAAvC,CAAP;AACH,GAZkB;AAanBK,EAAAA,QAAQ,EAAGH,IAAD,IAAU;AAEhB,WAAOnB,QAAQ,CAACoB,IAAT,CAAc,aAAd,EAA6BD,IAA7B,EAAmCtB,MAAnC,CAAP;AACH,GAhBkB;AAiBnB0B,EAAAA,eAAe,EAAGJ,IAAD,IAAU;AAEvB,WAAOnB,QAAQ,CAACoB,IAAT,CAAc,4BAAd,EAA4CD,IAA5C,CAAP;AACH,GApBkB;AAqBnBK,EAAAA,cAAc,EAAGL,IAAD,IAAU;AAEtB,WAAOnB,QAAQ,CAACoB,IAAT,CAAc,oCAAd,EAAoDD,IAApD,CAAP;AACH,GAxBkB;AAyBnBM,EAAAA,QAAQ,EAAGN,IAAD,IAAU;AAChB;AACA,WAAOnB,QAAQ,CAACoB,IAAT,CAAc,wBAAd,EAAwC;AAC3CM,MAAAA,GAAG,EAAEP,IAAI,CAACO,GADiC;AAE3CC,MAAAA,KAAK,EAAER,IAAI,CAACQ;AAF+B,KAAxC,CAAP;AAIH;AA/BkB,CAAhB;AAkCP,OAAO,MAAMC,UAAU,GAAG;AACtBC,EAAAA,OAAO,EAAE,MAAM;AAEX,WAAO7B,QAAQ,CAACM,GAAT,CAAa,kBAAb,CAAP;AACH;AAJqB,CAAnB;AAOP,OAAO,MAAMwB,UAAU,GAAG;AACtBC,EAAAA,UAAU,EAAGZ,IAAD,IAAU;AAElB,WAAOnB,QAAQ,CAACoB,IAAT,CAAc,cAAd,EAA8BD,IAA9B,EAAoCtB,MAApC,CAAP;AACH;AAJqB,CAAnB;AAOP,OAAO,MAAMmC,UAAU,GAAG;AAEtBC,EAAAA,WAAW,EAAGvB,EAAD,IAAQ;AACjB;AACA,QAAIwB,SAAS,GAAG,IAAIC,QAAJ,EAAhB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,OAAjB,EAA0BC,MAAM,CAAC3B,EAAD,CAAhC;AACA,WAAOV,QAAQ,CAACoB,IAAT,CAAc,8BAAd,EAA8Cc,SAA9C,EAAyDnC,OAAzD,CAAP;AACH,GAPqB;AAStBuC,EAAAA,UAAU,EAAE,CAACJ,SAAD,EAAYxB,EAAZ,KAAmB;AAC3B;AACA,WAAOV,QAAQ,CAACuC,KAAT,CAAgB,+BAA8B7B,EAAG,GAAjD,EAAqDwB,SAArD,EAAgEnC,OAAhE,CAAP;AACH,GAZqB;AAatByC,EAAAA,cAAc,EAAE,CAACN,SAAD,EAAYxB,EAAZ,KAAmB;AAC/B,WAAOV,QAAQ,CAACuC,KAAT,CAAgB,gBAAe7B,EAAE,GAAC,CAAE,GAApC,EAAwCwB,SAAxC,EAAmDnC,OAAnD,CAAP;AACH,GAfqB;AAgBtB0C,EAAAA,aAAa,EAAG/B,EAAD,IAAQ;AACnB,QAAIwB,SAAS,GAAG,IAAIC,QAAJ,EAAhB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,OAAjB,EAA0BC,MAAM,CAAC3B,EAAD,CAAhC;AACA,WAAOV,QAAQ,CAACoB,IAAT,CAAe,eAAf,EAA+Bc,SAA/B,EAA0CnC,OAA1C,CAAP;AACH,GApBqB;AAqBtB2C,EAAAA,eAAe,EAAGhC,EAAD,IAAQ;AACrB,WAAOV,QAAQ,CAAC2C,MAAT,CAAiB,gBAAejC,EAAE,GAAC,CAAE,EAArC,CAAP;AACH,GAvBqB;AAwBtBkC,EAAAA,YAAY,EAAE,MAAM;AAChB,WAAOhD,KAAK,CAACU,GAAN,CAAU,qCAAV,CAAP;AACH,GA1BqB;AA2BtBuC,EAAAA,UAAU,EAAE,MAAM;AACd,WAAO7C,QAAQ,CAACM,GAAT,CAAa,6BAAb,CAAP;AACH,GA7BqB;AA8BtBwC,EAAAA,YAAY,EAAE,MAAM;AAChB;AACA,WAAO9C,QAAQ,CAACM,GAAT,CAAa,eAAb,CAAP;AACH,GAjCqB;AAkCtByC,EAAAA,WAAW,EAAE,MAAM;AACf,WAAO/C,QAAQ,CAACM,GAAT,CAAa,eAAb,CAAP;AACH,GApCqB;AAqCtB0C,EAAAA,gBAAgB,EAAGC,MAAD,IAAY;AAC1B;AACA,WAAOjD,QAAQ,CAAE,kCAAiCiD,MAAO,EAA1C,CAAf;AACH;AAxCqB,CAAnB;AA4CP,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,QAAQ,EAAGF,MAAD,IAAY;AAClB;AACA,WAAOjD,QAAQ,CAACM,GAAT,CAAc,gBAAe2C,MAAO,EAApC,CAAP;AACH;AAJsB,CAApB","sourcesContent":["import * as  axios from 'axios'\n\nconst config = {\n    headers: {\n        'Content-Type': 'application/json',\n\n    }\n}\nconst config2 = {headers: {'Content-Type': 'multipart/form-data'}};\n\n\nconst instance = axios.create({\n    baseURL: 'http://127.0.0.1:8000/',\n\n\n});\n\nexport const faqAPI = {\n    getFaq_Group: () => {\n        return instance('api/faq_group/')\n    },\n    getFaq_Item: () => {\n        return instance.get('api/faq_item')\n    },\n    active_Item: (item) => {\n        return instance.put(`api/faq_item/${item.id}/`, {\n            Group: item.Group,\n            Title: item.Title,\n            Answer: item.Answer,\n            Active: item.Active,\n        })\n    }\n}\nexport const authAPI = {\n    getUser: (tokenConfig) => {\n\n        return instance.get('auth/users/me/', tokenConfig)\n    },\n    login: (body) => {\n\n        return instance.post('auth/token/login', body, config)\n    },\n    logout: (tokenConfig) => {\n\n        return instance.post('auth/token/logout', \"\", tokenConfig)\n    },\n    register: (body) => {\n\n        return instance.post('auth/users/', body, config)\n    },\n    forgot_password: (body) => {\n\n        return instance.post('auth/users/reset_password/', body)\n    },\n    reset_password: (body) => {\n\n        return instance.post('auth/users/reset_password_confirm/', body)\n    },\n    activate: (body) => {\n        debugger\n        return instance.post('auth/users/activation/', {\n            uid: body.uid,\n            token: body.token\n        })\n    },\n}\n\nexport const contentAPI = {\n    content: () => {\n\n        return instance.get('api/ContentPage/')\n    }\n}\n\nexport const contactAPI = {\n    PutContact: (body) => {\n\n        return instance.post('api/Contact/', body, config)\n    }\n}\n\nexport const profileAPI = {\n\n    PostProfile: (id) => {\n        debugger\n        let form_data = new FormData();\n        form_data.append('owner', String(id));\n        return instance.post('api/manufacturerProfilePage/', form_data, config2)\n    },\n\n    PutProfile: (form_data, id) => {\n        debugger\n        return instance.patch(`api/manufacturerProfilePage/${id}/`, form_data, config2)\n    },\n    PatchDocuments: (form_data, id) => {\n        return instance.patch(`api/Document/${id+1}/`, form_data, config2)\n    },\n    PostDocuments: (id) => {\n        let form_data = new FormData();\n        form_data.append('owner', String(id));\n        return instance.post(`api/Document/`, form_data, config2)\n    },\n    DeleteDocuments: (id) => {\n        return instance.delete(`api/Document/${id+1}`)\n    },\n    getCountries: () => {\n        return axios.get('http://restcountries.eu/rest/v2/all')\n    },\n    getProfile: () => {\n        return instance.get('api/manufacturerProfilePage')\n    },\n    getDocuments: () => {\n        debugger\n        return instance.get('api/Document/')\n    },\n    getCategory: () => {\n        return instance.get(\"api/Category/\")\n    },\n    getSearcheddData: (search) => {\n        debugger\n        return instance(`manufacturerProfilePage?search=${search}`)\n    }\n}\n\n\nexport const findPageAPI = {\n    findPage: (search) => {\n        debugger\n        return instance.get(`links?search=${search}`)\n    }\n}"]},"metadata":{},"sourceType":"module"}